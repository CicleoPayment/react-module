/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CicleoSubscriptionBridgeManager,
  CicleoSubscriptionBridgeManagerInterface,
} from "../../../contracts/SubscriptionBridgeManager.sol/CicleoSubscriptionBridgeManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_lifi",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountMaxPerPeriod",
        type: "uint256",
      },
    ],
    name: "EditSubscriptionLimit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountMaxPerPeriod",
        type: "uint256",
      },
    ],
    name: "changeSubscriptionLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lifi",
    outputs: [
      {
        internalType: "contract ILiFiDiamond",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "subscriptionManagerId",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "subscriptionId",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "priceInSubToken",
            type: "uint256",
          },
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct PaymentParameters",
        name: "paymentParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "dstPoolId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dstGasForCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lzFee",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "refundAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callTo",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct StargateData",
        name: "_stargateData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "referral",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "payFunctionWithBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "subscriptionManagerId",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "subscriptionId",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "priceInSubToken",
            type: "uint256",
          },
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct PaymentParameters",
        name: "paymentParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "dstPoolId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dstGasForCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lzFee",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "refundAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callTo",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct StargateData",
        name: "_stargateData",
        type: "tuple",
      },
    ],
    name: "renewSubscriptionByBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "nextPaymentTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionLimit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161172938038061172983398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b611696806100936000396000f3fe6080604052600436106100555760003560e01c806332b323a61461005a57806335c82bd0146100c657806346d1cc22146100db578063564b81ef146101135780638b753a2f1461012e578063a42125091461014e575b600080fd5b34801561006657600080fd5b506100a661007536600461096c565b6000602081815293815260408082208552928152828120909352825290208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b6100d96100d4366004610d6b565b610161565b005b3480156100e757600080fd5b506001546100fb906001600160a01b031681565b6040516001600160a01b0390911681526020016100bd565b34801561011f57600080fd5b506040514681526020016100bd565b34801561013a57600080fd5b506100d9610149366004610e55565b610268565b6100d961015c366004610e81565b6102ca565b60608901518951600090815260208181526040808320828e01518452825280832033845290915290206002015410156101d35760405162461bcd60e51b815260206004820152600f60248201526e082dadeeadce840e8dede40d0d2ced608b1b60448201526064015b60405180910390fd5b468952604080516020601f840181900481028201810190925282815261021e918b913391889190879087908190840183828082843760009201919091525050505060c08a01516103d1565b60c08601528851600090815260208181526040808320828d01518452825280832033808552925290912060010184905561025d908a908a8a8a8a6103f4565b505050505050505050565b60008381526020818152604080832085845282528083203380855290835292819020600201849055518381528492869290917fc50df9abeda1236c3cc22ec2e8bd50ee79eda415f485fa7e7978c9239971b51c910160405180910390a4505050565b60608601518651600090815260208181526040808320828b0151845282528083206001600160a01b038a16845290915290206002015410156103405760405162461bcd60e51b815260206004820152600f60248201526e082dadeeadce840e8dede40d0d2ced608b1b60448201526064016101ca565b8551600090815260208181526040808320828a0151845282528083206001600160a01b038916845290915290205442116103a75760405162461bcd60e51b8152602060048201526008602482015267546f6f206c61746560c01b60448201526064016101ca565b6103b686868360c001516107f6565b60c08201526103c98686868686866103f4565b505050505050565b60606103e8826103e38888888861085d565b6108bf565b90505b95945050505050565b60808601516040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561043a57600080fd5b505afa15801561044e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104729190610f33565b608088015160c08701516040516323b872dd60e01b81526001600160a01b038a81166004830152306024830152604482019290925292935016906323b872dd90606401602060405180830381600087803b1580156104cf57600080fd5b505af11580156104e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105079190610f57565b508651600090815260208181526040808320828b0151845282528083206001600160a01b038a1684529091529020600101546105439042610f91565b8751600090815260208181526040808320828c0151845282528083206001600160a01b038b811685529252918290209290925560c087015160808a015191516370a0823160e01b81523060048201529092849216906370a082319060240160206040518083038186803b1580156105b957600080fd5b505afa1580156105cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f19190610f33565b6105fb9190610fa9565b101561063b5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016101ca565b608087015160015460c087015160405163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b390604401602060405180830381600087803b15801561069357600080fd5b505af11580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb9190610f57565b50816060015134146107115760405162461bcd60e51b815260206004820152600f60248201526e4572726f72206d73672e76616c756560881b60448201526064016101ca565b821561078657600154604051636baab60f60e11b81526001600160a01b039091169063d7556c1e90349061074f9089908990899089906004016111c0565b6000604051808303818588803b15801561076857600080fd5b505af115801561077c573d6000803e3d6000fd5b50505050506107ed565b600154604051633b00e80760e01b81526001600160a01b0390911690633b00e8079034906107ba90899087906004016112f1565b6000604051808303818588803b1580156107d357600080fd5b505af11580156107e7573d6000803e3d6000fd5b50505050505b50505050505050565b6060610855826103e38587602001516040805160248101929092526001600160a01b03929092166044808301919091528251808303909101815260649091019091526020810180516001600160e01b031663bc0dee8360e01b17905290565b949350505050565b6040516060906309253c4960e31b908190610882908890889088908890602401611316565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152915050949350505050565b6060600080600080868060200190518101906108db91906113d3565b93509350935093508583600185516108f39190610fa9565b8151811061090357610903611558565b602002602001015160a0018190525083838383604051602001610929949392919061156e565b60405160208183030381529060405294505050505092915050565b6001600160a01b038116811461095957600080fd5b50565b803561096781610944565b919050565b60008060006060848603121561098157600080fd5b8335925060208401359150604084013561099a81610944565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b03811182821017156109de576109de6109a5565b60405290565b60405160e081016001600160401b03811182821017156109de576109de6109a5565b604051601f8201601f191681016001600160401b0381118282101715610a2e57610a2e6109a5565b604052919050565b600060a08284031215610a4857600080fd5b60405160a081018181106001600160401b0382111715610a6a57610a6a6109a5565b80604052508091508235815260208301356020820152604083013560ff81168114610a9457600080fd5b6040820152606083810135908201526080830135610ab181610944565b6080919091015292915050565b60006001600160401b03821115610ad757610ad76109a5565b50601f01601f191660200190565b600082601f830112610af657600080fd5b8135610b09610b0482610abe565b610a06565b818152846020838601011115610b1e57600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461095957600080fd5b803561096781610b3b565b60006101408284031215610b6757600080fd5b610b6f6109bb565b90508135815260208201356001600160401b0380821115610b8f57600080fd5b610b9b85838601610ae5565b60208401526040840135915080821115610bb457600080fd5b50610bc184828501610ae5565b604083015250610bd36060830161095c565b6060820152610be46080830161095c565b6080820152610bf560a0830161095c565b60a082015260c082013560c082015260e082013560e0820152610100610c1c818401610b49565b90820152610120610c2e838201610b49565b9082015292915050565b60008083601f840112610c4a57600080fd5b5081356001600160401b03811115610c6157600080fd5b6020830191508360208260051b8501011115610c7c57600080fd5b9250929050565b600060e08284031215610c9557600080fd5b610c9d6109e4565b905081358152602082013560208201526040820135604082015260608201356060820152610ccd6080830161095c565b608082015260a08201356001600160401b0380821115610cec57600080fd5b610cf885838601610ae5565b60a084015260c0840135915080821115610d1157600080fd5b50610d1e84828501610ae5565b60c08301525092915050565b60008083601f840112610d3c57600080fd5b5081356001600160401b03811115610d5357600080fd5b602083019150836020828501011115610c7c57600080fd5b60008060008060008060008060006101608a8c031215610d8a57600080fd5b610d948b8b610a36565b985060a08a01356001600160401b0380821115610db057600080fd5b610dbc8d838e01610b54565b995060c08c0135915080821115610dd257600080fd5b610dde8d838e01610c38565b909950975060e08c0135915080821115610df757600080fd5b610e038d838e01610c83565b9650610e126101008d0161095c565b95506101208c013594506101408c0135915080821115610e3157600080fd5b50610e3e8c828d01610d2a565b915080935050809150509295985092959850929598565b600080600060608486031215610e6a57600080fd5b505081359360208301359350604090920135919050565b6000806000806000806101208789031215610e9b57600080fd5b610ea58888610a36565b955060a0870135610eb581610944565b945060c08701356001600160401b0380821115610ed157600080fd5b610edd8a838b01610b54565b955060e0890135915080821115610ef357600080fd5b610eff8a838b01610c38565b9095509350610100890135915080821115610f1957600080fd5b50610f2689828a01610c83565b9150509295509295509295565b600060208284031215610f4557600080fd5b5051919050565b805161096781610b3b565b600060208284031215610f6957600080fd5b8151610f7481610b3b565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610fa457610fa4610f7b565b500190565b600082821015610fbb57610fbb610f7b565b500390565b60005b83811015610fdb578181015183820152602001610fc3565b83811115610fea576000848401525b50505050565b60008151808452611008816020860160208601610fc0565b601f01601f19169290920160200192915050565b600061014082518452602083015181602086015261103c82860182610ff0565b915050604083015184820360408601526110568282610ff0565b915050606083015161107360608601826001600160a01b03169052565b50608083015161108e60808601826001600160a01b03169052565b5060a08301516110a960a08601826001600160a01b03169052565b5060c083015160c085015260e083015160e0850152610100808401516110d28287018215159052565b50506101209283015115159390920192909252919050565b6000808335601e1984360301811261110157600080fd5b83016020810192503590506001600160401b0381111561112057600080fd5b803603831315610c7c57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8051825260208101516020830152604081015160408301526060810151606083015260018060a01b036080820151166080830152600060a082015160e060a08501526111a760e0850182610ff0565b905060c083015184820360c08601526103eb8282610ff0565b600060608083526111d38184018861101c565b602084820381860152818783528183019050818860051b840101896000805b8b8110156112cd57868403601f190185528235368e900360de19018112611217578283fd5b8d0160e0813561122681610944565b6001600160a01b039081168752828901359061124182610944565b1686890152604061125383820161095c565b6001600160a01b03169087015261126b828b0161095c565b6001600160a01b03168a8701526080828101359087015260a0611290818401846110ea565b83838a01526112a2848a01828461112f565b935050505060c06112b4818401610b49565b15159601959095525093850193918501916001016111f2565b50505086810360408801526112e28189611158565b9b9a5050505050505050505050565b604081526000611304604083018561101c565b82810360208401526103eb8185611158565b6000610100865183526020870151602084015260ff604088015116604084015260608701516060840152608087015160018060a01b03808216608086015280881660a086015280871660c086015250508060e084015261137881840185610ff0565b979650505050505050565b805161096781610944565b600082601f83011261139f57600080fd5b81516113ad610b0482610abe565b8181528460208386010111156113c257600080fd5b610855826020830160208701610fc0565b600080600080608085870312156113e957600080fd5b8451935060208501516001600160401b038082111561140757600080fd5b818701915087601f83011261141b57600080fd5b81518181111561142d5761142d6109a5565b61143c60208260051b01610a06565b8082825260208201915060208360051b86010192508a83111561145e57600080fd5b602085015b8381101561152a5780518581111561147a57600080fd5b860160e0818e03601f1901121561149057600080fd5b6114986109e4565b6114a460208301611383565b81526114b260408301611383565b60208201526114c360608301611383565b60408201526114d460808301611383565b606082015260a0820151608082015260c0820151878111156114f557600080fd5b6115048f60208386010161138e565b60a08301525061151660e08301610f4c565b60c082015284525060209283019201611463565b50809750505050505061153f60408601611383565b915061154d60608601611383565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b600060808083018784526020828186015281885180845260a093508387019150838160051b880101838b0160005b8381101561162e57898303609f19018552815180516001600160a01b039081168552878201518116888601526040808301518216908601526060808301519091169085015288810151898501528781015160e08986018190529061160282870182610ff0565b91505060c080830151925061161a8187018415159052565b50958701959350509085019060010161159c565b50506001600160a01b038a166040890152955061164c945050505050565b6001600160a01b03831660608301526103eb56fea264697066735822122072720d9540ec2b8167f019ecc78f8e4bc43886887219ffd89bd9c07a311daf7f64736f6c63430008090033";

type CicleoSubscriptionBridgeManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CicleoSubscriptionBridgeManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CicleoSubscriptionBridgeManager__factory extends ContractFactory {
  constructor(...args: CicleoSubscriptionBridgeManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _lifi: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CicleoSubscriptionBridgeManager> {
    return super.deploy(
      _lifi,
      overrides || {}
    ) as Promise<CicleoSubscriptionBridgeManager>;
  }
  override getDeployTransaction(
    _lifi: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_lifi, overrides || {});
  }
  override attach(address: string): CicleoSubscriptionBridgeManager {
    return super.attach(address) as CicleoSubscriptionBridgeManager;
  }
  override connect(signer: Signer): CicleoSubscriptionBridgeManager__factory {
    return super.connect(signer) as CicleoSubscriptionBridgeManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CicleoSubscriptionBridgeManagerInterface {
    return new utils.Interface(
      _abi
    ) as CicleoSubscriptionBridgeManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CicleoSubscriptionBridgeManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CicleoSubscriptionBridgeManager;
  }
}
