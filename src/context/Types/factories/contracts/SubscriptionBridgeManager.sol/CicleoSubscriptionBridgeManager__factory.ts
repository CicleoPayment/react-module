/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CicleoSubscriptionBridgeManager,
  CicleoSubscriptionBridgeManagerInterface,
} from "../../../contracts/SubscriptionBridgeManager.sol/CicleoSubscriptionBridgeManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_lifi",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountMaxPerPeriod",
        type: "uint256",
      },
    ],
    name: "EditSubscriptionLimit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "originalCalldata",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "dstCalldata",
        type: "bytes",
      },
    ],
    name: "changeDestinationCalldata",
    outputs: [
      {
        internalType: "bytes",
        name: "finalCallData",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountMaxPerPeriod",
        type: "uint256",
      },
    ],
    name: "changeSubscriptionLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lifi",
    outputs: [
      {
        internalType: "contract ILiFiDiamond",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "dstPoolId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dstGasForCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lzFee",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "refundAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callTo",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct StargateData",
        name: "_stargateData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "payFunctionWithBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "usersSubscriptionLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161138f38038061138f83398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6112fc806100936000396000f3fe60806040526004361061004a5760003560e01c806303b317961461004f57806311d7a4ef1461008557806346d1cc221461009a5780638b753a2f146100d2578063925c9e10146100f2575b600080fd5b34801561005b57600080fd5b5061006f61006a36600461077b565b61013d565b60405161007c919061083b565b60405180910390f35b610098610093366004610ac2565b6101c2565b005b3480156100a657600080fd5b506001546100ba906001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b3480156100de57600080fd5b506100986100ed366004610bc3565b6105ca565b3480156100fe57600080fd5b5061012f61010d366004610bef565b6000602081815293815260408082208552928152828120909352825290205481565b60405190815260200161007c565b6060600080600080868060200190518101906101599190610c8b565b93509350935093508583600185516101719190610e11565b8151811061018157610181610e36565b602002602001015160a00181905250838383836040516020016101a79493929190610e4c565b60405160208183030381529060405294505050505092915050565b60008b8152602081815260408083208d845282528083203384529091529020548811156102285760405162461bcd60e51b815260206004820152600f60248201526e082dadeeadce840e8dede40d0d2ced608b1b60448201526064015b60405180910390fd5b6040516370a0823160e01b815230600482015287906000906001600160a01b038316906370a082319060240160206040518083038186803b15801561026c57600080fd5b505afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a49190610f3e565b6040516323b872dd60e01b8152336004820152306024820152604481018c90529091506001600160a01b038316906323b872dd90606401602060405180830381600087803b1580156102f557600080fd5b505af1158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d9190610f57565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a082319060240160206040518083038186803b15801561037057600080fd5b505afa158015610384573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a89190610f3e565b90508a6103b58383610e11565b10156103f55760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161021f565b60015460405163095ea7b360e01b81526001600160a01b039182166004820152602481018d90529084169063095ea7b390604401602060405180830381600087803b15801561044357600080fd5b505af1158015610457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047b9190610f57565b5060006104c1338f8f8f8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061062992505050565b905060006104d38860c001518361013d565b60c089018190529050881561055157600154604051636baab60f60e11b81526001600160a01b039091169063d7556c1e90349061051a908f908f908f908f90600401611119565b6000604051808303818588803b15801561053357600080fd5b505af1158015610547573d6000803e3d6000fd5b50505050506105b8565b600154604051633b00e80760e01b81526001600160a01b0390911690633b00e807903490610585908f908d9060040161124a565b6000604051808303818588803b15801561059e57600080fd5b505af11580156105b2573d6000803e3d6000fd5b50505050505b50505050505050505050505050505050565b60008381526020818152604080832085845282528083203380855290835292819020849055518381528492869290917fc50df9abeda1236c3cc22ec2e8bd50ee79eda415f485fa7e7978c9239971b51c910160405180910390a4505050565b60405160609061064e90630a30933160e31b90879087908a908890889060200161126f565b60405160208183030381529060405290505b95945050505050565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156106a3576106a3610669565b60405290565b60405160e0810167ffffffffffffffff811182821017156106a3576106a3610669565b604051601f8201601f1916810167ffffffffffffffff811182821017156106f5576106f5610669565b604052919050565b600067ffffffffffffffff82111561071757610717610669565b50601f01601f191660200190565b600082601f83011261073657600080fd5b8135610749610744826106fd565b6106cc565b81815284602083860101111561075e57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561078e57600080fd5b823567ffffffffffffffff808211156107a657600080fd5b6107b286838701610725565b935060208501359150808211156107c857600080fd5b506107d585828601610725565b9150509250929050565b60005b838110156107fa5781810151838201526020016107e2565b83811115610809576000848401525b50505050565b600081518084526108278160208601602086016107df565b601f01601f19169290920160200192915050565b60208152600061084e602083018461080f565b9392505050565b803560ff8116811461086657600080fd5b919050565b6001600160a01b038116811461088057600080fd5b50565b80356108668161086b565b801515811461088057600080fd5b80356108668161088e565b600061014082840312156108ba57600080fd5b6108c261067f565b905081358152602082013567ffffffffffffffff808211156108e357600080fd5b6108ef85838601610725565b6020840152604084013591508082111561090857600080fd5b5061091584828501610725565b60408301525061092760608301610883565b606082015261093860808301610883565b608082015261094960a08301610883565b60a082015260c082013560c082015260e082013560e082015261010061097081840161089c565b9082015261012061098283820161089c565b9082015292915050565b60008083601f84011261099e57600080fd5b50813567ffffffffffffffff8111156109b657600080fd5b6020830191508360208260051b85010111156109d157600080fd5b9250929050565b600060e082840312156109ea57600080fd5b6109f26106a9565b905081358152602082013560208201526040820135604082015260608201356060820152610a2260808301610883565b608082015260a082013567ffffffffffffffff80821115610a4257600080fd5b610a4e85838601610725565b60a084015260c0840135915080821115610a6757600080fd5b50610a7484828501610725565b60c08301525092915050565b60008083601f840112610a9257600080fd5b50813567ffffffffffffffff811115610aaa57600080fd5b6020830191508360208285010111156109d157600080fd5b60008060008060008060008060008060006101208c8e031215610ae457600080fd5b8b359a5060208c01359950610afb60408d01610855565b985060608c01359750610b1060808d01610883565b965067ffffffffffffffff8060a08e01351115610b2c57600080fd5b610b3c8e60a08f01358f016108a7565b96508060c08e01351115610b4f57600080fd5b610b5f8e60c08f01358f0161098c565b909650945060e08d0135811015610b7557600080fd5b610b858e60e08f01358f016109d8565b9350806101008e01351115610b9957600080fd5b50610bab8d6101008e01358e01610a80565b81935080925050509295989b509295989b9093969950565b600080600060608486031215610bd857600080fd5b505081359360208301359350604090920135919050565b600080600060608486031215610c0457600080fd5b83359250602084013591506040840135610c1d8161086b565b809150509250925092565b80516108668161086b565b600082601f830112610c4457600080fd5b8151610c52610744826106fd565b818152846020838601011115610c6757600080fd5b610c788260208301602087016107df565b949350505050565b80516108668161088e565b60008060008060808587031215610ca157600080fd5b84519350602085015167ffffffffffffffff80821115610cc057600080fd5b818701915087601f830112610cd457600080fd5b815181811115610ce657610ce6610669565b610cf560208260051b016106cc565b8082825260208201915060208360051b86010192508a831115610d1757600080fd5b602085015b83811015610de357805185811115610d3357600080fd5b860160e0818e03601f19011215610d4957600080fd5b610d516106a9565b610d5d60208301610c28565b8152610d6b60408301610c28565b6020820152610d7c60608301610c28565b6040820152610d8d60808301610c28565b606082015260a0820151608082015260c082015187811115610dae57600080fd5b610dbd8f602083860101610c33565b60a083015250610dcf60e08301610c80565b60c082015284525060209283019201610d1c565b508097505050505050610df860408601610c28565b9150610e0660608601610c28565b905092959194509250565b600082821015610e3157634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b600060808083018784526020828186015281885180845260a093508387019150838160051b880101838b0160005b83811015610f0c57898303609f19018552815180516001600160a01b039081168552878201518116888601526040808301518216908601526060808301519091169085015288810151898501528781015160e089860181905290610ee08287018261080f565b91505060c0808301519250610ef88187018415159052565b509587019593505090850190600101610e7a565b50506001600160a01b038a1660408901529550610f2a945050505050565b6001600160a01b0383166060830152610660565b600060208284031215610f5057600080fd5b5051919050565b600060208284031215610f6957600080fd5b815161084e8161088e565b6000610140825184526020830151816020860152610f948286018261080f565b91505060408301518482036040860152610fae828261080f565b9150506060830151610fcb60608601826001600160a01b03169052565b506080830151610fe660808601826001600160a01b03169052565b5060a083015161100160a08601826001600160a01b03169052565b5060c083015160c085015260e083015160e08501526101008084015161102a8287018215159052565b50506101209283015115159390920192909252919050565b6000808335601e1984360301811261105957600080fd5b830160208101925035905067ffffffffffffffff81111561107957600080fd5b8036038313156109d157600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8051825260208101516020830152604081015160408301526060810151606083015260018060a01b036080820151166080830152600060a082015160e060a085015261110060e085018261080f565b905060c083015184820360c0860152610660828261080f565b6000606080835261112c81840188610f74565b602084820381860152818783528183019050818860051b840101896000805b8b81101561122657868403601f190185528235368e900360de19018112611170578283fd5b8d0160e0813561117f8161086b565b6001600160a01b039081168752828901359061119a8261086b565b168689015260406111ac838201610883565b6001600160a01b0316908701526111c4828b01610883565b6001600160a01b03168a8701526080828101359087015260a06111e981840184611042565b83838a01526111fb848a018284611088565b935050505060c061120d81840161089c565b151596019590955250938501939185019160010161114b565b505050868103604088015261123b81896110b1565b9b9a5050505050505050505050565b60408152600061125d6040830185610f74565b828103602084015261066081856110b1565b6001600160e01b0319871681526020810186905260ff851660408201526001600160a01b03841660608201526080810183905260c060a082018190526000906112ba9083018461080f565b9897505050505050505056fea2646970667358221220d5ff6fbc48fe1a6a5b7b566ca6ed55b85d3b36fe22e7a6b3612391300113979464736f6c63430008090033";

type CicleoSubscriptionBridgeManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CicleoSubscriptionBridgeManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CicleoSubscriptionBridgeManager__factory extends ContractFactory {
  constructor(...args: CicleoSubscriptionBridgeManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _lifi: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CicleoSubscriptionBridgeManager> {
    return super.deploy(
      _lifi,
      overrides || {}
    ) as Promise<CicleoSubscriptionBridgeManager>;
  }
  override getDeployTransaction(
    _lifi: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_lifi, overrides || {});
  }
  override attach(address: string): CicleoSubscriptionBridgeManager {
    return super.attach(address) as CicleoSubscriptionBridgeManager;
  }
  override connect(signer: Signer): CicleoSubscriptionBridgeManager__factory {
    return super.connect(signer) as CicleoSubscriptionBridgeManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CicleoSubscriptionBridgeManagerInterface {
    return new utils.Interface(
      _abi
    ) as CicleoSubscriptionBridgeManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CicleoSubscriptionBridgeManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CicleoSubscriptionBridgeManager;
  }
}
