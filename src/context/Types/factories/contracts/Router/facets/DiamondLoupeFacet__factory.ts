/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DiamondLoupeFacet,
  DiamondLoupeFacetInterface,
} from "../../../../contracts/Router/facets/DiamondLoupeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "_facetFunctionSelectors",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b42806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c57806352ef6b2c146100bd5780637a0ed627146100d2578063adfca15e146100e7578063cdffacc614610107575b600080fd5b6100a861006a3660046108f1565b6001600160e01b03191660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100c5610159565b6040516100b49190610922565b6100da610324565b6040516100b491906109b4565b6100fa6100f5366004610a31565b610779565b6040516100b49190610a5a565b6101416101153660046108f1565b6001600160e01b0319166000908152600080516020610aed833981519152602052604090205460601c90565b6040516001600160a01b0390911681526020016100b4565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e54606090600080516020610aed8339815191529061ffff1667ffffffffffffffff8111156101aa576101aa610a6d565b6040519080825280602002602001820160405280156101d3578160200160208202803683370190505b50915060008060005b600284015461ffff1682101561031c576000818152600185016020526040812054905b6008811015610307578361021281610a99565b600288015490955061ffff16851115905061022c57610307565b600581901b82901b6001600160e01b0319811660009081526020889052604081205460601c90805b888110156102aa578a818151811061026e5761026e610ab4565b60200260200101516001600160a01b0316836001600160a01b0316141561029857600191506102aa565b806102a281610a99565b915050610254565b5080156102b9575050506102f5565b818a89815181106102cc576102cc610ab4565b6001600160a01b0390921660209283029190910190910152876102ee81610a99565b9850505050505b806102ff81610a99565b9150506101ff565b5050808061031490610a99565b9150506101dc565b505082525090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e54606090600080516020610aed8339815191529061ffff1667ffffffffffffffff81111561037557610375610a6d565b6040519080825280602002602001820160405280156103bb57816020015b6040805180820190915260008152606060208201528152602001906001900390816103935790505b50600282015490925060009061ffff1667ffffffffffffffff8111156103e3576103e3610a6d565b60405190808252806020026020018201604052801561040c578160200160208202803683370190505b50905060008060005b600285015461ffff16821015610706576000818152600186016020526040812054905b60088110156106f1578361044b81610a99565b600289015490955061ffff168511159050610465576106f1565b600581901b82901b6001600160e01b0319811660009081526020899052604081205460601c90805b888110156105ae57826001600160a01b03168c82815181106104b1576104b1610ab4565b6020026020010151600001516001600160a01b0316141561059c57838c82815181106104df576104df610ab4565b6020026020010151602001518b83815181106104fd576104fd610ab4565b602002602001015161ffff168151811061051957610519610ab4565b60200260200101906001600160e01b03191690816001600160e01b0319168152505060ff8a828151811061054f5761054f610ab4565b602002602001015161ffff161061056557600080fd5b89818151811061057757610577610ab4565b60200260200101805180919061058c90610aca565b61ffff16905250600191506105ae565b806105a681610a99565b91505061048d565b5080156105bd575050506106df565b818b89815181106105d0576105d0610ab4565b60209081029190910101516001600160a01b03909116905260028a015461ffff1667ffffffffffffffff81111561060957610609610a6d565b604051908082528060200260200182016040528015610632578160200160208202803683370190505b508b898151811061064557610645610ab4565b602002602001015160200181905250828b898151811061066757610667610ab4565b60200260200101516020015160008151811061068557610685610ab4565b60200260200101906001600160e01b03191690816001600160e01b0319168152505060018989815181106106bb576106bb610ab4565b61ffff90921660209283029190910190910152876106d881610a99565b9850505050505b806106e981610a99565b915050610438565b505080806106fe90610a99565b915050610415565b5060005b8281101561076e57600084828151811061072657610726610ab4565b602002602001015161ffff169050600087838151811061074857610748610ab4565b60200260200101516020015190508181525050808061076690610a99565b91505061070a565b508185525050505090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e54606090600080516020610aed8339815191529060009061ffff1667ffffffffffffffff8111156107cd576107cd610a6d565b6040519080825280602002602001820160405280156107f6578160200160208202803683370190505b5092506000805b600284015461ffff168210156108e7576000818152600185016020526040812054905b60088110156108d2578361083381610a99565b600288015490955061ffff16851115905061084d576108d2565b600581901b82901b6001600160e01b0319811660009081526020889052604090205460601c6001600160a01b038a168114156108bd578189888151811061089657610896610ab4565b6001600160e01b031990921660209283029190910190910152866108b981610a99565b9750505b505080806108ca90610a99565b915050610820565b505080806108df90610a99565b9150506107fd565b5050825250919050565b60006020828403121561090357600080fd5b81356001600160e01b03198116811461091b57600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156109635783516001600160a01b03168352928401929184019160010161093e565b50909695505050505050565b600081518084526020808501945080840160005b838110156109a95781516001600160e01b03191687529582019590820190600101610983565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610a2357888303603f19018552815180516001600160a01b03168452870151878401879052610a108785018261096f565b95880195935050908601906001016109db565b509098975050505050505050565b600060208284031215610a4357600080fd5b81356001600160a01b038116811461091b57600080fd5b60208152600061091b602083018461096f565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610aad57610aad610a83565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600061ffff80831681811415610ae257610ae2610a83565b600101939250505056fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131ca2646970667358221220f6b94cfa49a96cddab292ea9b56f4f03ff8a8eb2f913f51be2b6144192beaba864736f6c63430008090033";

type DiamondLoupeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondLoupeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondLoupeFacet__factory extends ContractFactory {
  constructor(...args: DiamondLoupeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondLoupeFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondLoupeFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondLoupeFacet {
    return super.attach(address) as DiamondLoupeFacet;
  }
  override connect(signer: Signer): DiamondLoupeFacet__factory {
    return super.connect(signer) as DiamondLoupeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondLoupeFacetInterface {
    return new utils.Interface(_abi) as DiamondLoupeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondLoupeFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondLoupeFacet;
  }
}
