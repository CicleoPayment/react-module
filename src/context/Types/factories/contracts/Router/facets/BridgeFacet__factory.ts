/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BridgeFacet,
  BridgeFacetInterface,
} from "../../../../contracts/Router/facets/BridgeFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PaymentSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
    ],
    name: "UserEdited",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "bridgeSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_messageHash",
        type: "bytes32",
      },
    ],
    name: "getEthSignedMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "getMessage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "getMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "splitSignature",
    outputs: [
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "verifyString",
    outputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611832806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a82de68411610066578063a82de68414610149578063d2c3fbb71461015c578063e2a4b0ea14610187578063e73785e51461019c578063fa540801146101bc57600080fd5b806341b8cbb314610098578063564b81ef146100c05780636834e3a8146100d0578063a7bb580314610118575b600080fd5b6100ab6100a6366004611263565b61021d565b60405190151581526020015b60405180910390f35b465b6040519081526020016100b7565b6100c26100de3660046112e1565b6001600160a01b031660009081527faac8aff6168086bf0ebba85245f7ec7b3821eb78fcc9bef2b675e60b9384ed29602052604090205490565b61012b6101263660046112fe565b610272565b60408051938452602084019290925260ff16908201526060016100b7565b6100c261015736600461133b565b610300565b61016f61016a36600461138d565b610340565b6040516001600160a01b0390911681526020016100b7565b61019a610195366004611400565b6104d1565b005b6101af6101aa36600461133b565b610873565b6040516100b791906114a6565b6100c26101ca3660046114d9565b604080517f19457468657265756d205369676e6564204d6573736167653a0a3030303030306020820152908101829052600090606001604051602081830303815290604052805190602001209050919050565b60008061022d8888888888610873565b9050600080600061023d86610272565b925092509250886001600160a01b031661025985838686610340565b6001600160a01b0316149b9a5050505050505050505050565b600080600083516041146102cd5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064015b60405180910390fd5b50505060208101516040820151606083015160001a601b8110156102f9576102f6601b82611508565b90505b9193909250565b600061030f8686868686610873565b60405160200161031f9190611549565b60405160208183030381529060405280519060200120905095945050505050565b6040805180820190915260208082527f19457468657265756d205369676e6564204d6573736167653a0a303030303030908201528451600091906039820190620f423f81111561038f57600080fd5b6000620186a05b801561041b5760006103a88285611565565b9050806103c757826103c7576103bf600a83611565565b915050610396565b826103d181611587565b93506103df905082826115a2565b6103e990856115c1565b93506103f6600a83611565565b91506104036030826115d8565b90508461040f81611587565b95505080855350610396565b8161042957601b9150610437565b610434601a836115d8565b91505b8185526000858b60405160200161044f9291906115f0565b60408051601f1981840301815282825280516020918201206000845290830180835281905260ff8d1691830191909152606082018b9052608082018a9052915060019060a0016020604051602081039080840390855afa1580156104b7573d6000803e3d6000fd5b5050604051601f1901519c9b505050505050505050505050565b60006104dc866108ea565b6001600160a01b03851660009081527faac8aff6168086bf0ebba85245f7ec7b3821eb78fcc9bef2b675e60b9384ed2960208190526040909120549192509061052d9088908890889088908861021d565b61056d5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b60448201526064016102c4565b60ff86161580159061058357508560ff1660ff14155b6105be5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964204964202160a01b60448201526064016102c4565b816001600160a01b031663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105f757600080fd5b505afa15801561060b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062f919061161f565b6040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b0391909116906323b872dd90606401602060405180830381600087803b15801561067f57600080fd5b505af1158015610693573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b79190611651565b506001600160a01b03851660009081526020829052604081208054916106dc83611587565b91905055506106ed8483898861098d565b6000826001600160a01b0316637a94a6336040518163ffffffff1660e01b815260040160206040518083038186803b15801561072857600080fd5b505afa15801561073c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610760919061166c565b61076a90426115d8565b604051636f04176160e11b81526001600160a01b0388811660048301526024820183905260ff8a1660448301529192509084169063de082ec290606401600060405180830381600087803b1580156107c157600080fd5b505af11580156107d5573d6000803e3d6000fd5b505050508660ff16866001600160a01b0316897f9a609a853c9e2ab0e30b81e8dd73c72d48e2842194767c532f778ad9b35912538860405161081991815260200190565b60405180910390a48660ff16866001600160a01b0316897ffcda9f876b19b1444bd7bbe7732cf0c2eb5764f619714c9d7a7d6e75f87e1c188460405161086191815260200190565b60405180910390a45050505050505050565b60604661087f81610e78565b610893866001600160a01b03166014610f15565b61089c89610e78565b6108a88960ff16610e78565b6108b188610e78565b6108ba88610e78565b6040516020016108cf96959493929190611685565b60405160208183030381529060405291505095945050505050565b60007fd8f6e013ff0cbc66ded25851d52c18673042e44ec585aeabfa2e9126bad1f74e54604051633eb0cceb60e21b8152600481018490526001600160a01b039091169063fac333ac9060240160206040518083038186803b15801561094f57600080fd5b505afa158015610963573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610987919061161f565b92915050565b60006103e87fb614cc20afefd276f60a08638fc53c1ea3092f7f93df945b3977c828850a40ef600201546109cc90600160a01b900461ffff16876115a2565b6109d69190611565565b90506000846001600160a01b0316639d76ea586040518163ffffffff1660e01b815260040160206040518083038186803b158015610a1357600080fd5b505afa158015610a27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4b919061161f565b90506000856001600160a01b03166361d027b36040518163ffffffff1660e01b815260040160206040518083038186803b158015610a8857600080fd5b505afa158015610a9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac0919061161f565b90506000610ace84896115c1565b60008781527fb614cc20afefd276f60a08638fc53c1ea3092f7f93df945b3977c828850a40f2602090815260408083206001600160a01b038a8116855292528083205481516306ffd81f60e41b8152908316600482015281519495509293918b1692636ffd81f09260248083019392829003018186803b158015610b5157600080fd5b505afa158015610b65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b89919061179a565b60008981527fb614cc20afefd276f60a08638fc53c1ea3092f7f93df945b3977c828850a40f2602090815260408083206001600160a01b038c81168552925290912054919350161580159150610c0f575060008781527fb614cc20afefd276f60a08638fc53c1ea3092f7f93df945b3977c828850a40f3602052604090205461ffff1615155b8015610c185750805b15610d385760008781527fb614cc20afefd276f60a08638fc53c1ea3092f7f93df945b3977c828850a40f360205260408120546103e890610c5d9061ffff16856115a2565b610c679190611565565b9050610c7381846115c1565b60008981527fb614cc20afefd276f60a08638fc53c1ea3092f7f93df945b3977c828850a40f2602090815260408083206001600160a01b038c8116855290835281842054825163a9059cbb60e01b8152908216600482015260248101879052915194975089169363a9059cbb93604480840194938390030190829087803b158015610cfd57600080fd5b505af1158015610d11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d359190611651565b50505b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905285169063a9059cbb90604401602060405180830381600087803b158015610d8257600080fd5b505af1158015610d96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dba9190611651565b506001600160a01b03841663a9059cbb7fb614cc20afefd276f60a08638fc53c1ea3092f7f93df945b3977c828850a40ef5460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260248101889052604401602060405180830381600087803b158015610e3457600080fd5b505af1158015610e48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6c9190611651565b50505050505050505050565b60606000610e85836110b8565b600101905060008167ffffffffffffffff811115610ea557610ea56111b7565b6040519080825280601f01601f191660200182016040528015610ecf576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610f0857610f0d565b610ed9565b509392505050565b60606000610f248360026115a2565b610f2f9060026115d8565b67ffffffffffffffff811115610f4757610f476111b7565b6040519080825280601f01601f191660200182016040528015610f71576020820181803683370190505b509050600360fc1b81600081518110610f8c57610f8c6117cf565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610fbb57610fbb6117cf565b60200101906001600160f81b031916908160001a9053506000610fdf8460026115a2565b610fea9060016115d8565b90505b6001811115611062576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061101e5761101e6117cf565b1a60f81b828281518110611034576110346117cf565b60200101906001600160f81b031916908160001a90535060049490941c9361105b816117e5565b9050610fed565b5083156110b15760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102c4565b9392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106110f75772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611123576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061114157662386f26fc10000830492506010015b6305f5e1008310611159576305f5e100830492506008015b612710831061116d57612710830492506004015b6064831061117f576064830492506002015b600a83106109875760010192915050565b60ff8116811461119f57600080fd5b50565b6001600160a01b038116811461119f57600080fd5b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156111e8576111e86111b7565b604051601f8501601f19908116603f01168101908282118183101715611210576112106111b7565b8160405280935085815286868601111561122957600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261125457600080fd5b6110b1838335602085016111cd565b60008060008060008060c0878903121561127c57600080fd5b86359550602087013561128e81611190565b9450604087013561129e816111a2565b9350606087013592506080870135915060a087013567ffffffffffffffff8111156112c857600080fd5b6112d489828a01611243565b9150509295509295509295565b6000602082840312156112f357600080fd5b81356110b1816111a2565b60006020828403121561131057600080fd5b813567ffffffffffffffff81111561132757600080fd5b61133384828501611243565b949350505050565b600080600080600060a0868803121561135357600080fd5b85359450602086013561136581611190565b93506040860135611375816111a2565b94979396509394606081013594506080013592915050565b600080600080608085870312156113a357600080fd5b843567ffffffffffffffff8111156113ba57600080fd5b8501601f810187136113cb57600080fd5b6113da878235602084016111cd565b94505060208501356113eb81611190565b93969395505050506040820135916060013590565b600080600080600060a0868803121561141857600080fd5b85359450602086013561142a81611190565b9350604086013561143a816111a2565b925060608601359150608086013567ffffffffffffffff81111561145d57600080fd5b61146988828901611243565b9150509295509295909350565b60005b83811015611491578181015183820152602001611479565b838111156114a0576000848401525b50505050565b60208152600082518060208401526114c5816040850160208701611476565b601f01601f19169190910160400192915050565b6000602082840312156114eb57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115611525576115256114f2565b019392505050565b6000815161153f818560208601611476565b9290920192915050565b6000825161155b818460208701611476565b9190910192915050565b60008261158257634e487b7160e01b600052601260045260246000fd5b500490565b600060001982141561159b5761159b6114f2565b5060010190565b60008160001904831182151516156115bc576115bc6114f2565b500290565b6000828210156115d3576115d36114f2565b500390565b600082198211156115eb576115eb6114f2565b500190565b60008351611602818460208801611476565b835190830190611616818360208801611476565b01949350505050565b60006020828403121561163157600080fd5b81516110b1816111a2565b8051801515811461164c57600080fd5b919050565b60006020828403121561166357600080fd5b6110b18261163c565b60006020828403121561167e57600080fd5b5051919050565b7f4369636c656f204272696467656420537562736372697074696f6e0a0a436861815263034b71d160e51b6020820152600087516116ca816024850160208c01611476565b6552ab9b2b91d160cd1b60249184019182015287516116f081602b840160208c01611476565b6b529bab126b0b730b3b2b91d1609d1b602b9290910191820152865161171d816038840160208b01611476565b6d529bab139b1b934b83a34b7b71d1608d1b60389290910191820152855161174c816047840160208a01611476565b665283934b1b29d160c51b6047929091019182015261178d611787611774604f84018861152d565b6652737b731b29d160c51b815260080190565b8561152d565b9998505050505050505050565b600080604083850312156117ad57600080fd5b82516117b881611190565b91506117c66020840161163c565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b6000816117f4576117f46114f2565b50600019019056fea26469706673582212201abc090600f6182cbd18a5c1f3b3e6c21316773e67764de031a39f492069997764736f6c63430008090033";

type BridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeFacet__factory extends ContractFactory {
  constructor(...args: BridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeFacet> {
    return super.deploy(overrides || {}) as Promise<BridgeFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeFacet {
    return super.attach(address) as BridgeFacet;
  }
  override connect(signer: Signer): BridgeFacet__factory {
    return super.connect(signer) as BridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeFacetInterface {
    return new utils.Interface(_abi) as BridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as BridgeFacet;
  }
}
