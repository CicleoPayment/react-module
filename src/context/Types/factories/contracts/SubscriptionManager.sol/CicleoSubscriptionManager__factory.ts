/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CicleoSubscriptionManager,
  CicleoSubscriptionManagerInterface,
} from "../../../contracts/SubscriptionManager.sol/CicleoSubscriptionManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subscriptionDuration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Cancel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountMaxPerPeriod",
        type: "uint256",
      },
    ],
    name: "EditSubscriptionLimit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newName",
        type: "string",
      },
    ],
    name: "NameEdited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "subscrptionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "SubscriptionEdited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "TreasuryEdited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "subscrptionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
    ],
    name: "UserEdited",
    type: "event",
  },
  {
    inputs: [],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountMaxPerPeriod",
        type: "uint256",
      },
    ],
    name: "changeSubscriptionLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deleteSubManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subscriptionEndDate",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
    ],
    name: "editAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract CicleoSubscriptionFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserSubscriptionId",
    outputs: [
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserSubscriptionStatus",
    outputs: [
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "subscrptionId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
    ],
    name: "payFunctionWithSubToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "contract IOpenOceanCaller",
        name: "executor",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "srcToken",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "dstToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "srcReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "dstReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guaranteedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flags",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
        ],
        internalType: "struct SwapDescription",
        name: "desc",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "target",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IOpenOceanCaller.CallDescription[]",
        name: "calls",
        type: "tuple[]",
      },
      {
        internalType: "uint8",
        name: "subscrptionId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
    ],
    name: "payFunctionWithSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "subscriptionEndDate",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "subscriptionLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPayment",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "canceled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200228b3803806200228b83398101604081905262000034916200017a565b600380546001600160a01b0319166001600160a01b038716179055835162000064906004906020870190620000a1565b50600180546001600160a01b039485166001600160a01b031991821617909155600280549390941692169190911790915560065550620002d99050565b828054620000af906200029c565b90600052602060002090601f016020900481019282620000d357600085556200011e565b82601f10620000ee57805160ff19168380011785556200011e565b828001600101855582156200011e579182015b828111156200011e57825182559160200191906001019062000101565b506200012c92915062000130565b5090565b5b808211156200012c576000815560010162000131565b80516001600160a01b03811681146200015f57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a086880312156200019357600080fd5b6200019e8662000147565b602087810151919650906001600160401b0380821115620001be57600080fd5b818901915089601f830112620001d357600080fd5b815181811115620001e857620001e862000164565b604051601f8201601f19908116603f0116810190838211818310171562000213576200021362000164565b816040528281528c868487010111156200022c57600080fd5b600093505b8284101562000250578484018601518185018701529285019262000231565b82841115620002625760008684830101525b809950505050505050620002796040870162000147565b9250620002896060870162000147565b9150608086015190509295509295909350565b600181811c90821680620002b157607f821691505b60208210811415620002d357634e487b7160e01b600052602260045260246000fd5b50919050565b611fa280620002e96000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063a9b023d7116100ad578063ea8a1af011610071578063ea8a1af014610334578063f0f442601461033c578063f64409871461034f578063fc0c546a14610362578063fc37001d1461037557600080fd5b8063a9b023d7146102e0578063c45a0155146102e8578063c47f0027146102fb578063d1d0aaca1461030e578063de082ec21461032157600080fd5b806379cfb441116100f457806379cfb441146102385780637a94a6331461024f5780637b61c320146102585780639d76ea5814610260578063a87430ba1461027157600080fd5b806306fdde03146101315780633b97e8561461014f57806361d027b3146101695780636ffd81f01461019457806373866e4a14610223575b600080fd5b6101396103e5565b6040516101469190611791565b60405180910390f35b610157610473565b60405160ff9091168152602001610146565b60025461017c906001600160a01b031681565b6040516001600160a01b039091168152602001610146565b61020a6101a23660046117d3565b6001600160a01b031660009081526020818152604091829020825160a0810184528154808252600183015460ff908116948301859052600284015495830195909552600383015460608301526004909201549093161515608090930192909252914290911190565b6040805160ff9093168352901515602083015201610146565b61023661023136600461180a565b6104f5565b005b61024160055481565b604051908152602001610146565b61024160065481565b610139610877565b6001546001600160a01b031661017c565b6102b461027f3660046117d3565b60006020819052908152604090208054600182015460028301546003840154600490940154929360ff92831693919290911685565b6040805195865260ff90941660208601529284019190915260608301521515608082015260a001610146565b6102366108f8565b60035461017c906001600160a01b031681565b610236610309366004611927565b610b7e565b61023661031c366004611978565b610cf3565b61023661032f366004611991565b610d37565b610236610fe8565b61023661034a3660046117d3565b61102d565b61023661035d366004611a3f565b61119a565b60015461017c906001600160a01b031681565b6101576103833660046117d3565b6001600160a01b031660009081526020818152604091829020825160a08101845281548152600182015460ff90811693820184905260028301549482019490945260038201546060820152600490910154909216151560809092019190915290565b600480546103f290611ba3565b80601f016020809104026020016040519081016040528092919081815260200182805461041e90611ba3565b801561046b5780601f106104405761010080835404028352916020019161046b565b820191906000526020600020905b81548152906001019060200180831161044e57829003601f168201915b505050505081565b6001546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b1580156104b857600080fd5b505afa1580156104cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f09190611bde565b905090565b60035460408051633b4b40fd60e21b815290516000926001600160a01b03169163ed2d03f4916004808301926020929190829003018186803b15801561053a57600080fd5b505afa15801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105729190611bfb565b9050336001600160a01b038216146105a55760405162461bcd60e51b815260040161059c90611c18565b60405180910390fd5b6001600160a01b03851660009081526020819052604090206004015460ff161561060c5760405162461bcd60e51b815260206004820152601860248201527714dd589cd8dc9a5c1d1a5bdb881a5cc818d85b98d95b195960421b604482015260640161059c565b6001600160a01b0385166000908152602081905260409020600201548311156106475760405162461bcd60e51b815260040161059c90611c40565b6001546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a082319060240160206040518083038186803b15801561068d57600080fd5b505afa1580156106a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c59190611c9d565b6001546040516323b872dd60e01b81526001600160a01b0389811660048301528581166024830152604482018890529293509116906323b872dd90606401602060405180830381600087803b15801561071d57600080fd5b505af1158015610731573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107559190611cb6565b506001546040516370a0823160e01b81526001600160a01b03848116600483015260009216906370a082319060240160206040518083038186803b15801561079c57600080fd5b505afa1580156107b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d49190611c9d565b9050846107e18383611cd8565b101561082f5760405162461bcd60e51b815260206004820152601d60248201527f54686520746f6b656e20686176652061207472616e7366657220666565000000604482015260640161059c565b5050506001600160a01b0390931660009081526020819052604090209283555060018201805460ff90921660ff19928316179055426003830155600490910180549091169055565b600154604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b1580156108bc57600080fd5b505afa1580156108d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104f09190810190611cfd565b60035460405163de275a5360e01b81523060048201526001600160a01b0390911690630e2b5e31903390839063de275a539060240160206040518083038186803b15801561094557600080fd5b505afa158015610959573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097d9190611c9d565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b1580156109c157600080fd5b505afa1580156109d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f99190611cb6565b610a155760405162461bcd60e51b815260040161059c90611c18565b600360009054906101000a90046001600160a01b03166001600160a01b031663548799186040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6357600080fd5b505afa158015610a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9b9190611bfb565b6001600160a01b031663a9b023d76040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ad557600080fd5b505af1158015610ae9573d6000803e3d6000fd5b50505050600360009054906101000a90046001600160a01b03166001600160a01b0316636184c1646040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3b57600080fd5b505afa158015610b4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b739190611bfb565b6001600160a01b0316ff5b60035460405163de275a5360e01b81523060048201526001600160a01b0390911690630e2b5e31903390839063de275a539060240160206040518083038186803b158015610bcb57600080fd5b505afa158015610bdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c039190611c9d565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b158015610c4757600080fd5b505afa158015610c5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7f9190611cb6565b610c9b5760405162461bcd60e51b815260040161059c90611c18565b8051610cae90600490602084019061169c565b50336001600160a01b03167ffff3144eba2747c7ad75e596cd08dd11d1166b7cad249cdd17763b739f2fafcb82604051610ce89190611791565b60405180910390a250565b336000818152602081815260409182902060020184905590518381527f7542cc753a908acdf779a93d3a5f50b0a1aca820a6631efb4c2329a75c9bb4059101610ce8565b60035460405163de275a5360e01b81523060048201526001600160a01b0390911690630e2b5e31903390839063de275a539060240160206040518083038186803b158015610d8457600080fd5b505afa158015610d98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbc9190611c9d565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b158015610e0057600080fd5b505afa158015610e14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e389190611cb6565b610e545760405162461bcd60e51b815260040161059c90611c18565b6000806000856001600160a01b03166001600160a01b031681526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900460ff1660ff1660ff16815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152505090506040518060a001604052808481526020018360ff168152602001826040015181526020018260600151815260200182608001511515815250600080866001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908360ff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055509050508160ff16846001600160a01b03167f2815c54eff31992c67f47ec452b0faf4601159cc5677f81921aefe48bd246ce385604051610fda91815260200190565b60405180910390a350505050565b33600081815260208190526040808220600401805460ff19166001179055517fdfae2e44eee3429afab9409ee9f946d11d84e8eee5d3c81525197a2925b0ceb99190a2565b60035460405163de275a5360e01b81523060048201526001600160a01b0390911690630e2b5e31903390839063de275a539060240160206040518083038186803b15801561107a57600080fd5b505afa15801561108e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b29190611c9d565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b1580156110f657600080fd5b505afa15801561110a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112e9190611cb6565b61114a5760405162461bcd60e51b815260040161059c90611c18565b600280546001600160a01b0319166001600160a01b03831690811790915560405190815233907ff78c93bb9ce334a3514fd14794277640e05d76b6612fc1adb391d4bf0e16475690602001610ce8565b60035460408051633b4b40fd60e21b815290516000926001600160a01b03169163ed2d03f4916004808301926020929190829003018186803b1580156111df57600080fd5b505afa1580156111f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112179190611bfb565b9050336001600160a01b038216146112415760405162461bcd60e51b815260040161059c90611c18565b6001600160a01b03891660009081526020819052604090206004015460ff16156112a85760405162461bcd60e51b815260206004820152601860248201527714dd589cd8dc9a5c1d1a5bdb881a5cc818d85b98d95b195960421b604482015260640161059c565b6001600160a01b0389166000908152602081905260409020600201548311156112e35760405162461bcd60e51b815260040161059c90611c40565b60035460408051636a8f902760e11b815290516000926001600160a01b03169163d51f204e916004808301926020929190829003018186803b15801561132857600080fd5b505afa15801561133c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113609190611bfb565b60a089018590526001546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b1580156113b057600080fd5b505afa1580156113c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e89190611c9d565b895160808b01516040516323b872dd60e01b81526001600160a01b038f81166004830152306024830152604482019290925292935016906323b872dd90606401602060405180830381600087803b15801561144257600080fd5b505af1158015611456573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147a9190611cb6565b50885160808a015160405163095ea7b360e01b81526001600160a01b038581166004830152602482019290925291169063095ea7b390604401602060405180830381600087803b1580156114cd57600080fd5b505af11580156114e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115059190611cb6565b506040516348208d1960e11b81526001600160a01b038316906390411a3290611538908d908d908d908d90600401611e6b565b602060405180830381600087803b15801561155257600080fd5b505af1158015611566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158a9190611c9d565b506001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156115cf57600080fd5b505afa1580156115e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116079190611c9d565b9050856116148383611cd8565b10156116505760405162461bcd60e51b815260206004820152600b60248201526a14ddd85c0819985a5b195960aa1b604482015260640161059c565b5050506001600160a01b03909816600090815260208190526040902090815560018101805460ff90941660ff199485161790554260038201556004018054909216909155505050505050565b8280546116a890611ba3565b90600052602060002090601f0160209004810192826116ca5760008555611710565b82601f106116e357805160ff1916838001178555611710565b82800160010185558215611710579182015b828111156117105782518255916020019190600101906116f5565b5061171c929150611720565b5090565b5b8082111561171c5760008155600101611721565b60005b83811015611750578181015183820152602001611738565b8381111561175f576000848401525b50505050565b6000815180845261177d816020860160208601611735565b601f01601f19169290920160200192915050565b6020815260006117a46020830184611765565b9392505050565b6001600160a01b03811681146117c057600080fd5b50565b80356117ce816117ab565b919050565b6000602082840312156117e557600080fd5b81356117a4816117ab565b60ff811681146117c057600080fd5b80356117ce816117f0565b6000806000806080858703121561182057600080fd5b843561182b816117ab565b9350602085013561183b816117f0565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561188a5761188a611850565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156118b9576118b9611850565b604052919050565b600067ffffffffffffffff8211156118db576118db611850565b50601f01601f191660200190565b60006118fc6118f7846118c1565b611890565b905082815283838301111561191057600080fd5b828260208301376000602084830101529392505050565b60006020828403121561193957600080fd5b813567ffffffffffffffff81111561195057600080fd5b8201601f8101841361196157600080fd5b611970848235602084016118e9565b949350505050565b60006020828403121561198a57600080fd5b5035919050565b6000806000606084860312156119a657600080fd5b83356119b1816117ab565b92506020840135915060408401356119c8816117f0565b809150509250925092565b600082601f8301126119e457600080fd5b6117a4838335602085016118e9565b60008083601f840112611a0557600080fd5b50813567ffffffffffffffff811115611a1d57600080fd5b6020830191508360208260051b8501011115611a3857600080fd5b9250929050565b60008060008060008060008060e0898b031215611a5b57600080fd5b8835611a66816117ab565b97506020890135611a76816117ab565b9650604089013567ffffffffffffffff80821115611a9357600080fd5b908a0190610140828d031215611aa857600080fd5b611ab0611866565b611ab9836117c3565b8152611ac7602084016117c3565b6020820152611ad8604084016117c3565b6040820152611ae9606084016117c3565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e0820152610100611b248185016117c3565b908201526101208381013583811115611b3c57600080fd5b611b488f8287016119d3565b8284015250508098505060608b0135915080821115611b6657600080fd5b50611b738b828c016119f3565b9096509450611b86905060808a016117ff565b925060a0890135915060c089013590509295985092959890939650565b600181811c90821680611bb757607f821691505b60208210811415611bd857634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611bf057600080fd5b81516117a4816117f0565b600060208284031215611c0d57600080fd5b81516117a4816117ab565b6020808252600e908201526d4e6f7420616c6c6f77656420746f60901b604082015260600190565b6020808252603f908201527f596f75206e65656420746f20617070726f7665206f757220636f6e747261637460408201527f20746f207370656e64207468697320616d6f756e74206f6620746f6b656e7300606082015260800190565b600060208284031215611caf57600080fd5b5051919050565b600060208284031215611cc857600080fd5b815180151581146117a457600080fd5b600082821015611cf857634e487b7160e01b600052601160045260246000fd5b500390565b600060208284031215611d0f57600080fd5b815167ffffffffffffffff811115611d2657600080fd5b8201601f81018413611d3757600080fd5b8051611d456118f7826118c1565b818152856020838501011115611d5a57600080fd5b611d6b826020830160208601611735565b95945050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b810191508460005b87811015611e5e5782840389528135607e19883603018112611dd857600080fd5b870180358552858101358686015260408082013590860152608060608083013536849003601e19018112611e0b57600080fd5b8301803567ffffffffffffffff811115611e2457600080fd5b803603851315611e3357600080fd5b83838a0152611e47848a01828c8501611d74565b9d8a019d9850505093870193505050600101611db7565b5091979650505050505050565b6001600160a01b03851681526060602082018190528451611e96918301906001600160a01b03169052565b60006020850151611eb260808401826001600160a01b03169052565b5060408501516001600160a01b03811660a08401525060608501516001600160a01b03811660c084015250608085015160e083015260a0850151610100818185015260c08701519150610120828186015260e088015192506101408381870152828901519350611f2e6101608701856001600160a01b03169052565b81890151935080610180870152505050611f4c6101a0840182611765565b90508281036040840152611f61818587611d9d565b97965050505050505056fea2646970667358221220a72baedd14ea38b66aa6d74c3dd45ccad2237914f3b7fc50bd95fb04a64e685564736f6c63430008090033";

type CicleoSubscriptionManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CicleoSubscriptionManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CicleoSubscriptionManager__factory extends ContractFactory {
  constructor(...args: CicleoSubscriptionManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    _subscriptionDuration: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CicleoSubscriptionManager> {
    return super.deploy(
      _factory,
      _name,
      _token,
      _treasury,
      _subscriptionDuration,
      overrides || {}
    ) as Promise<CicleoSubscriptionManager>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    _subscriptionDuration: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _name,
      _token,
      _treasury,
      _subscriptionDuration,
      overrides || {}
    );
  }
  override attach(address: string): CicleoSubscriptionManager {
    return super.attach(address) as CicleoSubscriptionManager;
  }
  override connect(signer: Signer): CicleoSubscriptionManager__factory {
    return super.connect(signer) as CicleoSubscriptionManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CicleoSubscriptionManagerInterface {
    return new utils.Interface(_abi) as CicleoSubscriptionManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CicleoSubscriptionManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CicleoSubscriptionManager;
  }
}
