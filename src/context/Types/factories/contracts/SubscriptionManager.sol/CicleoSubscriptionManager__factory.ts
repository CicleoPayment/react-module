/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CicleoSubscriptionManager,
  CicleoSubscriptionManagerInterface,
} from "../../../contracts/SubscriptionManager.sol/CicleoSubscriptionManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Cancel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountMaxPerPeriod",
        type: "uint256",
      },
    ],
    name: "EditSubscriptionLimit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "SubscriptionEdited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
    ],
    name: "UserEdited",
    type: "event",
  },
  {
    inputs: [],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "oldPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
    ],
    name: "changeSubscription",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountMaxPerPeriod",
        type: "uint256",
      },
    ],
    name: "changeSubscriptionLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deleteSubManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subscriptionEndDate",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
    ],
    name: "editAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract CicleoSubscriptionFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "oldPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "getAmountChangeSubscription",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserSubscriptionId",
    outputs: [
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserSubscriptionStatus",
    outputs: [
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subscriptionDuration",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
    ],
    name: "payFunctionWithSubToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "contract IOpenOceanCaller",
        name: "executor",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "srcToken",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "dstToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "srcReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "dstReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guaranteedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flags",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
        ],
        internalType: "struct SwapDescription",
        name: "desc",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "target",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IOpenOceanCaller.CallDescription[]",
        name: "calls",
        type: "tuple[]",
      },
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
    ],
    name: "payFunctionWithSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "subscriptionEndDate",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "subscriptionLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPayment",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "canceled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600280546001600160a01b0319163317905561251a806100326000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80639d76ea58116100c3578063de082ec21161007c578063de082ec214610399578063ea8a1af0146103ac578063f0f44260146103b4578063f6440987146103c7578063fc0c546a146103da578063fc37001d146103ed57600080fd5b80639d76ea58146102d8578063a87430ba146102e9578063a9b023d714610358578063c45a015514610360578063c47f002714610373578063d1d0aaca1461038657600080fd5b806373866e4a1161011557806373866e4a1461028557806379cfb441146102985780637a94a633146102a15780637b61c320146102aa5780637ff7e616146102b2578063926c0f21146102c557600080fd5b806306fdde031461015d578063144fa6d71461017b5780633b97e856146101905780633f16d99e146101aa57806361d027b3146101cb5780636ffd81f0146101f6575b600080fd5b61016561045d565b6040516101729190611bba565b60405180910390f35b61018e610189366004611bfc565b6104eb565b005b6101986105cc565b60405160ff9091168152602001610172565b6101bd6101b8366004611c19565b61064e565b604051908152602001610172565b6004546101de906001600160a01b031681565b6040516001600160a01b039091168152602001610172565b61026c610204366004611bfc565b6001600160a01b031660009081526020818152604091829020825160a0810184528154808252600183015460ff908116948301859052600284015495830195909552600383015460608301526004909201549093161515608090930192909252914290911190565b6040805160ff9093168352901515602083015201610172565b61018e610293366004611c68565b61071e565b6101bd60055481565b6101bd60065481565b610165610add565b61018e6102c0366004611d9d565b610b5e565b6101bd6102d3366004611e07565b610bd2565b6001546001600160a01b03166101de565b61032c6102f7366004611bfc565b60006020819052908152604090208054600182015460028301546003840154600490940154929360ff92831693919290911685565b6040805195865260ff90941660208601529284019190915260608301521515608082015260a001610172565b61018e610e39565b6002546101de906001600160a01b031681565b61018e610381366004611e51565b6110bf565b61018e610394366004611e8e565b61118c565b61018e6103a7366004611ea7565b6111d6565b61018e6113d9565b61018e6103c2366004611bfc565b61141e565b61018e6103d5366004611f35565b6114f6565b6001546101de906001600160a01b031681565b6101986103fb366004611bfc565b6001600160a01b031660009081526020818152604091829020825160a08101845281548152600182015460ff90811693820184905260028301549482019490945260038201546060820152600490910154909216151560809092019190915290565b6003805461046a90612099565b80601f016020809104026020016040519081016040528092919081815260200182805461049690612099565b80156104e35780601f106104b8576101008083540402835291602001916104e3565b820191906000526020600020905b8154815290600101906020018083116104c657829003601f168201915b505050505081565b600260009054906101000a90046001600160a01b03166001600160a01b031663ed2d03f46040518163ffffffff1660e01b815260040160206040518083038186803b15801561053957600080fd5b505afa15801561054d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057191906120d4565b6001600160a01b0316336001600160a01b0316146105aa5760405162461bcd60e51b81526004016105a1906120f1565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561061157600080fd5b505afa158015610625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106499190612119565b905090565b6001600160a01b038316600090815260208181526040808320815160a0810183528154808252600183015460ff90811695830195909552600283015493820193909352600382015460608201526004909101549092161515608083015260065442919084906106bd848461214c565b6006546106ca919061214c565b6106d49089612163565b6106de9190612182565b9050600060065484846106f1919061214c565b6106fb9089612163565b6107059190612182565b9050610711828261214c565b9998505050505050505050565b60025460408051633b4b40fd60e21b815290516000926001600160a01b03169163ed2d03f4916004808301926020929190829003018186803b15801561076357600080fd5b505afa158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b91906120d4565b9050336001600160a01b038216146107c55760405162461bcd60e51b81526004016105a1906120f1565b6001600160a01b03851660009081526020819052604090206004015460ff161561082c5760405162461bcd60e51b815260206004820152601860248201527714dd589cd8dc9a5c1d1a5bdb881a5cc818d85b98d95b195960421b60448201526064016105a1565b600654610839904261214c565b6001600160a01b038616600090815260208190526040902060030154106108725760405162461bcd60e51b81526004016105a1906121a4565b6001600160a01b0385166000908152602081905260409020600201548311156108ad5760405162461bcd60e51b81526004016105a1906121eb565b6001546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a082319060240160206040518083038186803b1580156108f357600080fd5b505afa158015610907573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092b9190612248565b6001546040516323b872dd60e01b81526001600160a01b0389811660048301528581166024830152604482018890529293509116906323b872dd90606401602060405180830381600087803b15801561098357600080fd5b505af1158015610997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bb9190612261565b506001546040516370a0823160e01b81526001600160a01b03848116600483015260009216906370a082319060240160206040518083038186803b158015610a0257600080fd5b505afa158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a9190612248565b905084610a47838361214c565b1015610a955760405162461bcd60e51b815260206004820152601d60248201527f54686520746f6b656e20686176652061207472616e736665722066656500000060448201526064016105a1565b5050506001600160a01b0390931660009081526020819052604090209283555060018201805460ff90921660ff19928316179055426003830155600490910180549091169055565b600154604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b158015610b2257600080fd5b505afa158015610b36573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106499190810190612283565b6002546001600160a01b03163314610b885760405162461bcd60e51b81526004016105a1906120f1565b8351610b9b906003906020870190611ac5565b50600180546001600160a01b039485166001600160a01b031991821617909155600480549390941692169190911790915560065550565b600080600260009054906101000a90046001600160a01b03166001600160a01b031663ed2d03f46040518163ffffffff1660e01b815260040160206040518083038186803b158015610c2357600080fd5b505afa158015610c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5b91906120d4565b9050336001600160a01b03821614610c855760405162461bcd60e51b81526004016105a1906120f1565b6001600160a01b03861660009081526020818152604091829020825160a08101845281548152600182015460ff908116938201939093526002820154938101939093526003810154606084015260040154161515608082015285851115610d86576000610cf388888861064e565b6001546040516323b872dd60e01b81526001600160a01b038b811660048301528681166024830152604482018490529293509116906323b872dd90606401602060405180830381600087803b158015610d4b57600080fd5b505af1158015610d5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d839190612261565b50505b6040805160a0810182528251815260ff80871660208084019182528585015184860190815260608088015190860190815260808089015115159087019081526001600160a01b038f16600090815293849052969092209451855591516001850180549190941660ff19918216179093559051600284015551600383015591516004909101805491151591909216179055858511610e24576000610e2e565b610e2e868661214c565b979650505050505050565b60025460405163de275a5360e01b81523060048201526001600160a01b0390911690630e2b5e31903390839063de275a539060240160206040518083038186803b158015610e8657600080fd5b505afa158015610e9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebe9190612248565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b158015610f0257600080fd5b505afa158015610f16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3a9190612261565b610f565760405162461bcd60e51b81526004016105a1906120f1565b600260009054906101000a90046001600160a01b03166001600160a01b031663548799186040518163ffffffff1660e01b815260040160206040518083038186803b158015610fa457600080fd5b505afa158015610fb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdc91906120d4565b6001600160a01b031663a9b023d76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561101657600080fd5b505af115801561102a573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b0316636184c1646040518163ffffffff1660e01b815260040160206040518083038186803b15801561107c57600080fd5b505afa158015611090573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b491906120d4565b6001600160a01b0316ff5b600260009054906101000a90046001600160a01b03166001600160a01b031663ed2d03f46040518163ffffffff1660e01b815260040160206040518083038186803b15801561110d57600080fd5b505afa158015611121573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114591906120d4565b6001600160a01b0316336001600160a01b0316146111755760405162461bcd60e51b81526004016105a1906120f1565b8051611188906003906020840190611ac5565b5050565b336000818152602081815260409182902060020184905590518381527f7542cc753a908acdf779a93d3a5f50b0a1aca820a6631efb4c2329a75c9bb405910160405180910390a250565b600260009054906101000a90046001600160a01b03166001600160a01b031663ed2d03f46040518163ffffffff1660e01b815260040160206040518083038186803b15801561122457600080fd5b505afa158015611238573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125c91906120d4565b6001600160a01b0316336001600160a01b03161461128c5760405162461bcd60e51b81526004016105a1906120f1565b6000806000856001600160a01b03166001600160a01b031681526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900460ff1660ff1660ff16815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152505090506040518060a001604052808481526020018360ff168152602001826040015181526020018260600151815260200182608001511515815250600080866001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908360ff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555090505050505050565b33600081815260208190526040808220600401805460ff19166001179055517fdfae2e44eee3429afab9409ee9f946d11d84e8eee5d3c81525197a2925b0ceb99190a2565b600260009054906101000a90046001600160a01b03166001600160a01b031663ed2d03f46040518163ffffffff1660e01b815260040160206040518083038186803b15801561146c57600080fd5b505afa158015611480573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a491906120d4565b6001600160a01b0316336001600160a01b0316146114d45760405162461bcd60e51b81526004016105a1906120f1565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60025460408051633b4b40fd60e21b815290516000926001600160a01b03169163ed2d03f4916004808301926020929190829003018186803b15801561153b57600080fd5b505afa15801561154f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157391906120d4565b9050336001600160a01b0382161461159d5760405162461bcd60e51b81526004016105a1906120f1565b6001600160a01b03891660009081526020819052604090206004015460ff16156116045760405162461bcd60e51b815260206004820152601860248201527714dd589cd8dc9a5c1d1a5bdb881a5cc818d85b98d95b195960421b60448201526064016105a1565b600654611611904261214c565b6001600160a01b038a166000908152602081905260409020600301541061164a5760405162461bcd60e51b81526004016105a1906121a4565b6001600160a01b0389166000908152602081905260409020600201548311156116855760405162461bcd60e51b81526004016105a1906121eb565b60025460408051636a8f902760e11b815290516000926001600160a01b03169163d51f204e916004808301926020929190829003018186803b1580156116ca57600080fd5b505afa1580156116de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170291906120d4565b60a089018590526001546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b15801561175257600080fd5b505afa158015611766573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178a9190612248565b895160808b01516040516323b872dd60e01b81526001600160a01b038f81166004830152306024830152604482019290925292935016906323b872dd90606401602060405180830381600087803b1580156117e457600080fd5b505af11580156117f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181c9190612261565b50885160808a015160405163095ea7b360e01b81526001600160a01b038581166004830152602482019290925291169063095ea7b390604401602060405180830381600087803b15801561186f57600080fd5b505af1158015611883573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a79190612261565b506040516348208d1960e11b81526001600160a01b038316906390411a32906118da908d908d908d908d906004016123ee565b602060405180830381600087803b1580156118f457600080fd5b505af1158015611908573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192c9190612248565b506001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561197157600080fd5b505afa158015611985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a99190612248565b9050856119b6838361214c565b10156119f25760405162461bcd60e51b815260206004820152600b60248201526a14ddd85c0819985a5b195960aa1b60448201526064016105a1565b60015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b158015611a4057600080fd5b505af1158015611a54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a789190612261565b5050506001600160a01b0390991660009081526020819052604090209182555060018101805460ff90941660ff199485161790554260038201556004018054909216909155505050505050565b828054611ad190612099565b90600052602060002090601f016020900481019282611af35760008555611b39565b82601f10611b0c57805160ff1916838001178555611b39565b82800160010185558215611b39579182015b82811115611b39578251825591602001919060010190611b1e565b50611b45929150611b49565b5090565b5b80821115611b455760008155600101611b4a565b60005b83811015611b79578181015183820152602001611b61565b83811115611b88576000848401525b50505050565b60008151808452611ba6816020860160208601611b5e565b601f01601f19169290920160200192915050565b602081526000611bcd6020830184611b8e565b9392505050565b6001600160a01b0381168114611be957600080fd5b50565b8035611bf781611bd4565b919050565b600060208284031215611c0e57600080fd5b8135611bcd81611bd4565b600080600060608486031215611c2e57600080fd5b8335611c3981611bd4565b95602085013595506040909401359392505050565b60ff81168114611be957600080fd5b8035611bf781611c4e565b60008060008060808587031215611c7e57600080fd5b8435611c8981611bd4565b93506020850135611c9981611c4e565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715611ce857611ce8611cae565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611d1757611d17611cae565b604052919050565b600067ffffffffffffffff821115611d3957611d39611cae565b50601f01601f191660200190565b600082601f830112611d5857600080fd5b8135611d6b611d6682611d1f565b611cee565b818152846020838601011115611d8057600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215611db357600080fd5b843567ffffffffffffffff811115611dca57600080fd5b611dd687828801611d47565b9450506020850135611de781611bd4565b92506040850135611df781611bd4565b9396929550929360600135925050565b60008060008060808587031215611e1d57600080fd5b8435611e2881611bd4565b935060208501359250604085013591506060850135611e4681611c4e565b939692955090935050565b600060208284031215611e6357600080fd5b813567ffffffffffffffff811115611e7a57600080fd5b611e8684828501611d47565b949350505050565b600060208284031215611ea057600080fd5b5035919050565b600080600060608486031215611ebc57600080fd5b8335611ec781611bd4565b9250602084013591506040840135611ede81611c4e565b809150509250925092565b60008083601f840112611efb57600080fd5b50813567ffffffffffffffff811115611f1357600080fd5b6020830191508360208260051b8501011115611f2e57600080fd5b9250929050565b60008060008060008060008060e0898b031215611f5157600080fd5b8835611f5c81611bd4565b97506020890135611f6c81611bd4565b9650604089013567ffffffffffffffff80821115611f8957600080fd5b908a0190610140828d031215611f9e57600080fd5b611fa6611cc4565b611faf83611bec565b8152611fbd60208401611bec565b6020820152611fce60408401611bec565b6040820152611fdf60608401611bec565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e082015261010061201a818501611bec565b90820152610120838101358381111561203257600080fd5b61203e8f828701611d47565b8284015250508098505060608b013591508082111561205c57600080fd5b506120698b828c01611ee9565b909650945061207c905060808a01611c5d565b925060a0890135915060c089013590509295985092959890939650565b600181811c908216806120ad57607f821691505b602082108114156120ce57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156120e657600080fd5b8151611bcd81611bd4565b6020808252600e908201526d4e6f7420616c6c6f77656420746f60901b604082015260600190565b60006020828403121561212b57600080fd5b8151611bcd81611c4e565b634e487b7160e01b600052601160045260246000fd5b60008282101561215e5761215e612136565b500390565b600081600019048311821515161561217d5761217d612136565b500290565b60008261219f57634e487b7160e01b600052601260045260246000fd5b500490565b60208082526027908201527f596f752063616e6e6f742070617920747769636520696e207468652073616d65604082015266081c195c9a5bd960ca1b606082015260800190565b6020808252603f908201527f596f75206e65656420746f20617070726f7665206f757220636f6e747261637460408201527f20746f207370656e64207468697320616d6f756e74206f6620746f6b656e7300606082015260800190565b60006020828403121561225a57600080fd5b5051919050565b60006020828403121561227357600080fd5b81518015158114611bcd57600080fd5b60006020828403121561229557600080fd5b815167ffffffffffffffff8111156122ac57600080fd5b8201601f810184136122bd57600080fd5b80516122cb611d6682611d1f565b8181528560208385010111156122e057600080fd5b6122f1826020830160208601611b5e565b95945050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b818352600060208085019450848460051b86018460005b878110156123e15783830389528135607e1988360301811261235b57600080fd5b870180358452858101358685015260408082013590850152608060608083013536849003601e1901811261238e57600080fd5b8301803567ffffffffffffffff8111156123a757600080fd5b8036038513156123b657600080fd5b83838901526123ca848901828c85016122fa565b9d8a019d975050509387019350505060010161233a565b5090979650505050505050565b6001600160a01b03851681526060602082018190528451612419918301906001600160a01b03169052565b6000602085015161243560808401826001600160a01b03169052565b5060408501516001600160a01b03811660a08401525060608501516001600160a01b03811660c084015250608085015160e083015260a0850151610100818185015260c08701519150610120828186015260e0880151925061014083818701528289015193506124b16101608701856001600160a01b03169052565b818901519350806101808701525050506124cf6101a0840182611b8e565b90508281036040840152610e2e81858761232356fea2646970667358221220d6e6908652d90465229fbd37607f67c61f06d5c3b41c79dfb0023062c2084f3b64736f6c63430008090033";

type CicleoSubscriptionManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CicleoSubscriptionManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CicleoSubscriptionManager__factory extends ContractFactory {
  constructor(...args: CicleoSubscriptionManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CicleoSubscriptionManager> {
    return super.deploy(overrides || {}) as Promise<CicleoSubscriptionManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CicleoSubscriptionManager {
    return super.attach(address) as CicleoSubscriptionManager;
  }
  override connect(signer: Signer): CicleoSubscriptionManager__factory {
    return super.connect(signer) as CicleoSubscriptionManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CicleoSubscriptionManagerInterface {
    return new utils.Interface(_abi) as CicleoSubscriptionManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CicleoSubscriptionManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CicleoSubscriptionManager;
  }
}
