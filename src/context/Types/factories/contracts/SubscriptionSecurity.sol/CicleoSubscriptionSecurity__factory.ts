/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CicleoSubscriptionSecurity,
  CicleoSubscriptionSecurityInterface,
} from "../../../contracts/SubscriptionSecurity.sol/CicleoSubscriptionSecurity";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
    ],
    name: "MintOwnerPass",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "blacklist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deleteSubManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract CicleoSubscriptionFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_subManagerId",
        type: "uint256",
      },
    ],
    name: "getOwnersBySubmanagerId",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getSubManagerList",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subManagerId",
        type: "uint256",
      },
    ],
    name: "getSubManagerTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
    ],
    name: "mintNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownershipByNftId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownershipBySubscriptionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isBlacklist",
        type: "bool",
      },
    ],
    name: "setBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    name: "setFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_URI",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subManagerId",
        type: "uint256",
      },
    ],
    name: "verifyIfOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506125d9806100206000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c80636352211e1161011a578063a9b023d7116100ad578063cbf694781161007c578063cbf694781461044b578063d1194e2b1461046b578063e985e9c51461047e578063f2fde38b146104ba578063f9f92be4146104cd57600080fd5b8063a9b023d714610409578063b88d4fde14610411578063c45a015514610424578063c87b56dd1461043857600080fd5b80638129fc1c116100e95780638129fc1c146103d55780638da5cb5b146103dd57806395d89b41146103ee578063a22cb465146103f657600080fd5b80636352211e1461038657806370a0823114610399578063715018a6146103ac578063810931f3146103b457600080fd5b806318160ddd1161019d57806342842e0e1161016c57806342842e0e146103275780634f6ccce71461033a578063588d2a471461034d5780635b3d45b2146103605780635bb478081461037357600080fd5b806318160ddd146102d957806323b872dd146102e1578063291077c4146102f45780632f745c591461031457600080fd5b8063081812fc116101d9578063081812fc14610275578063095ea7b3146102a05780630e2b5e31146102b3578063153b0d1e146102c657600080fd5b806301790e011461020b57806301ffc9a71461022857806302fe53051461024b57806306fdde0314610260575b600080fd5b61021561012e5481565b6040519081526020015b60405180910390f35b61023b610236366004611ec6565b6104f1565b604051901515815260200161021f565b61025e610259366004611f76565b61051c565b005b61026861053c565b60405161021f9190612017565b61028861028336600461202a565b6105ce565b6040516001600160a01b03909116815260200161021f565b61025e6102ae36600461205f565b6105f5565b61023b6102c136600461205f565b610710565b61025e6102d4366004612089565b61076f565b609954610215565b61025e6102ef3660046120c5565b6107a3565b610307610302366004612101565b6107d4565b60405161021f919061211c565b61021561032236600461205f565b61088c565b61025e6103353660046120c5565b610922565b61021561034836600461202a565b61093d565b61021561035b36600461205f565b6109d0565b61021561036e366004612160565b610a2d565b61025e610381366004612101565b610a5f565b61028861039436600461202a565b610a8a565b6102156103a7366004612101565b610aea565b61025e610b70565b6102156103c236600461202a565b6101306020526000908152604090205481565b61025e610b84565b60c9546001600160a01b0316610288565b610268610cea565b61025e610404366004612089565b610cf9565b61025e610d04565b61025e61041f366004612182565b610e32565b61012f54610288906001600160a01b031681565b61026861044636600461202a565b610e6a565b61045e61045936600461202a565b610eb4565b60405161021f91906121fe565b61025e61047936600461205f565b610f98565b61023b61048c36600461223f565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b61025e6104c8366004612101565b610ff5565b61023b6104db366004612101565b6101326020526000908152604090205460ff1681565b60006001600160e01b0319821663780e9d6360e01b148061051657506105168261106b565b92915050565b6105246110bb565b80516105389061012d906020840190611e17565b5050565b60606065805461054b90612272565b80601f016020809104026020016040519081016040528092919081815260200182805461057790612272565b80156105c45780601f10610599576101008083540402835291602001916105c4565b820191906000526020600020905b8154815290600101906020018083116105a757829003601f168201915b5050505050905090565b60006105d982611115565b506000908152606960205260409020546001600160a01b031690565b600061060082610a8a565b9050806001600160a01b0316836001600160a01b031614156106735760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061068f575061068f813361048c565b6107015760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161066a565b61070b8383611174565b505050565b6000805b61071d84610aea565b81101561076557826101306000610734878561088c565b8152602001908152602001600020541415610753576001915050610516565b8061075d816122c3565b915050610714565b5060009392505050565b6107776110bb565b6001600160a01b0391909116600090815261013260205260409020805460ff1916911515919091179055565b6107ad33826111e2565b6107c95760405162461bcd60e51b815260040161066a906122de565b61070b838383611261565b606060006107e183610aea565b67ffffffffffffffff8111156107f9576107f9611eea565b604051908082528060200260200182016040528015610822578160200160208202803683370190505b50905060005b61083184610aea565b811015610885576101306000610847868461088c565b8152602001908152602001600020548282815181106108685761086861232b565b60209081029190910101528061087d816122c3565b915050610828565b5092915050565b600061089783610aea565b82106108f95760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161066a565b506001600160a01b03919091166000908152609760209081526040808320938352929052205490565b61070b83838360405180602001604052806000815250610e32565b600061094860995490565b82106109ab5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161066a565b609982815481106109be576109be61232b565b90600052602060002001549050919050565b6000805b6109dd84610aea565b811015610765578261013060006109f4878561088c565b8152602001908152602001600020541415610a1b57610a13848261088c565b915050610516565b80610a25816122c3565b9150506109d4565b6101316020528160005260406000208181548110610a4a57600080fd5b90600052602060002001600091509150505481565b610a676110bb565b61012f80546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152606760205260408120546001600160a01b0316806105165760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161066a565b60006001600160a01b038216610b545760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161066a565b506001600160a01b031660009081526068602052604090205490565b610b786110bb565b610b8260006113d2565b565b600054610100900460ff1615808015610ba45750600054600160ff909116105b80610bbe5750303b158015610bbe575060005460ff166001145b610c215760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161066a565b6000805460ff191660011790558015610c44576000805461ff0019166101001790555b610c4c611424565b610c54611453565b610ca16040518060400160405280601081526020016f4369636c656f204f776e65725061737360801b815250604051806040016040528060038152602001620434f560ec1b815250611482565b8015610ce7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b60606066805461054b90612272565b6105383383836114b3565b61012f5460405163de275a5360e01b81523360048201526000916001600160a01b03169063de275a539060240160206040518083038186803b158015610d4957600080fd5b505afa158015610d5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d819190612341565b905080610dd05760405162461bcd60e51b815260206004820152601860248201527f4f6e6c79207375624d616e616765722063616e206275726e0000000000000000604482015260640161066a565b60005b60008281526101316020526040902054811015610538576000828152610131602052604090208054610e20919083908110610e1057610e1061232b565b9060005260206000200154611582565b80610e2a816122c3565b915050610dd3565b610e3c33836111e2565b610e585760405162461bcd60e51b815260040161066a906122de565b610e6484848484611625565b50505050565b606061012d82604051602001610e8192919061235a565b60408051601f1981840301815290829052610e9e916020016123f9565b6040516020818303038152906040529050919050565b600081815261013160205260408120546060919067ffffffffffffffff811115610ee057610ee0611eea565b604051908082528060200260200182016040528015610f09578160200160208202803683370190505b50905060005b60008481526101316020526040902054811015610885576000848152610131602052604090208054610f5c919083908110610f4c57610f4c61232b565b9060005260206000200154610a8a565b828281518110610f6e57610f6e61232b565b6001600160a01b039092166020928302919091019091015280610f90816122c3565b915050610f0f565b61012f546001600160a01b03163314610feb5760405162461bcd60e51b815260206004820152601560248201527413db9b1e48199858dd1bdc9e4818d85b881b5a5b9d605a1b604482015260640161066a565b6105388282611658565b610ffd6110bb565b6001600160a01b0381166110625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161066a565b610ce7816113d2565b60006001600160e01b031982166380ac58cd60e01b148061109c57506001600160e01b03198216635b5e139f60e01b145b8061051657506301ffc9a760e01b6001600160e01b0319831614610516565b60c9546001600160a01b03163314610b825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066a565b6000818152606760205260409020546001600160a01b0316610ce75760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161066a565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906111a982610a8a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806111ee83610a8a565b9050806001600160a01b0316846001600160a01b0316148061123557506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b806112595750836001600160a01b031661124e846105ce565b6001600160a01b0316145b949350505050565b826001600160a01b031661127482610a8a565b6001600160a01b03161461129a5760405162461bcd60e51b815260040161066a90612422565b6001600160a01b0382166112fc5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161066a565b611309838383600161176d565b826001600160a01b031661131c82610a8a565b6001600160a01b0316146113425760405162461bcd60e51b815260040161066a90612422565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60c980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661144b5760405162461bcd60e51b815260040161066a90612467565b610b826118ad565b600054610100900460ff1661147a5760405162461bcd60e51b815260040161066a90612467565b610b826118dd565b600054610100900460ff166114a95760405162461bcd60e51b815260040161066a90612467565b610538828261190b565b816001600160a01b0316836001600160a01b031614156115155760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161066a565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600061158d82610a8a565b905061159d81600084600161176d565b6115a682610a8a565b600083815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526068845282852080546000190190558785526067909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b611630848484611261565b61163c84848484611959565b610e645760405162461bcd60e51b815260040161066a906124b2565b6001600160a01b03821660009081526101326020526040902054829060ff16156116c45760405162461bcd60e51b815260206004820152601860248201527f4e46543a20596f752061726520626c61636b6c69737465640000000000000000604482015260640161066a565b600161012e60008282546116d89190612504565b925050819055506116ec8361012e54611a66565b61012e8054600090815261013060209081526040808320869055858352610131825280832093548454600181018655948452928290209093019190915581516001600160a01b03861681529081018490527fc1d365af4c3297fbec0aed045dbdced226893bbf33491e1e1082b690e55c3c79910160405180910390a1505050565b61177984848484611bff565b60018111156117e85760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b606482015260840161066a565b816001600160a01b0385166118445761183f81609980546000838152609a60205260408120829055600182018355919091527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000155565b611867565b836001600160a01b0316856001600160a01b031614611867576118678582611c87565b6001600160a01b0384166118835761187e81611d24565b6118a6565b846001600160a01b0316846001600160a01b0316146118a6576118a68482611dd3565b5050505050565b600054610100900460ff166118d45760405162461bcd60e51b815260040161066a90612467565b610b82336113d2565b600054610100900460ff166119045760405162461bcd60e51b815260040161066a90612467565b600160fb55565b600054610100900460ff166119325760405162461bcd60e51b815260040161066a90612467565b8151611945906065906020850190611e17565b50805161070b906066906020840190611e17565b60006001600160a01b0384163b15611a5b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061199d90339089908890889060040161251c565b602060405180830381600087803b1580156119b757600080fd5b505af19250505080156119e7575060408051601f3d908101601f191682019092526119e491810190612559565b60015b611a41573d808015611a15576040519150601f19603f3d011682016040523d82523d6000602084013e611a1a565b606091505b508051611a395760405162461bcd60e51b815260040161066a906124b2565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611259565b506001949350505050565b6001600160a01b038216611abc5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161066a565b6000818152606760205260409020546001600160a01b031615611b215760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161066a565b611b2f60008383600161176d565b6000818152606760205260409020546001600160a01b031615611b945760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161066a565b6001600160a01b038216600081815260686020908152604080832080546001019055848352606790915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001811115610e64576001600160a01b03841615611c45576001600160a01b03841660009081526068602052604081208054839290611c3f908490612576565b90915550505b6001600160a01b03831615610e64576001600160a01b03831660009081526068602052604081208054839290611c7c908490612504565b909155505050505050565b60006001611c9484610aea565b611c9e9190612576565b600083815260986020526040902054909150808214611cf1576001600160a01b03841660009081526097602090815260408083208584528252808320548484528184208190558352609890915290208190555b5060009182526098602090815260408084208490556001600160a01b039094168352609781528383209183525290812055565b609954600090611d3690600190612576565b6000838152609a602052604081205460998054939450909284908110611d5e57611d5e61232b565b906000526020600020015490508060998381548110611d7f57611d7f61232b565b6000918252602080832090910192909255828152609a90915260408082208490558582528120556099805480611db757611db761258d565b6001900381819060005260206000200160009055905550505050565b6000611dde83610aea565b6001600160a01b039093166000908152609760209081526040808320868452825280832085905593825260989052919091209190915550565b828054611e2390612272565b90600052602060002090601f016020900481019282611e455760008555611e8b565b82601f10611e5e57805160ff1916838001178555611e8b565b82800160010185558215611e8b579182015b82811115611e8b578251825591602001919060010190611e70565b50611e97929150611e9b565b5090565b5b80821115611e975760008155600101611e9c565b6001600160e01b031981168114610ce757600080fd5b600060208284031215611ed857600080fd5b8135611ee381611eb0565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611f1b57611f1b611eea565b604051601f8501601f19908116603f01168101908282118183101715611f4357611f43611eea565b81604052809350858152868686011115611f5c57600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611f8857600080fd5b813567ffffffffffffffff811115611f9f57600080fd5b8201601f81018413611fb057600080fd5b61125984823560208401611f00565b60005b83811015611fda578181015183820152602001611fc2565b83811115610e645750506000910152565b60008151808452612003816020860160208601611fbf565b601f01601f19169290920160200192915050565b602081526000611ee36020830184611feb565b60006020828403121561203c57600080fd5b5035919050565b80356001600160a01b038116811461205a57600080fd5b919050565b6000806040838503121561207257600080fd5b61207b83612043565b946020939093013593505050565b6000806040838503121561209c57600080fd5b6120a583612043565b9150602083013580151581146120ba57600080fd5b809150509250929050565b6000806000606084860312156120da57600080fd5b6120e384612043565b92506120f160208501612043565b9150604084013590509250925092565b60006020828403121561211357600080fd5b611ee382612043565b6020808252825182820181905260009190848201906040850190845b8181101561215457835183529284019291840191600101612138565b50909695505050505050565b6000806040838503121561217357600080fd5b50508035926020909101359150565b6000806000806080858703121561219857600080fd5b6121a185612043565b93506121af60208601612043565b925060408501359150606085013567ffffffffffffffff8111156121d257600080fd5b8501601f810187136121e357600080fd5b6121f287823560208401611f00565b91505092959194509250565b6020808252825182820181905260009190848201906040850190845b818110156121545783516001600160a01b03168352928401929184019160010161221a565b6000806040838503121561225257600080fd5b61225b83612043565b915061226960208401612043565b90509250929050565b600181811c9082168061228657607f821691505b602082108114156122a757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156122d7576122d76122ad565b5060010190565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561235357600080fd5b5051919050565b600080845481600182811c91508083168061237657607f831692505b602080841082141561239657634e487b7160e01b86526022600452602486fd5b8180156123aa57600181146123bb576123e8565b60ff198616895284890196506123e8565b60008b81526020902060005b868110156123e05781548b8201529085019083016123c7565b505084890196505b509785525050509301949350505050565b6000825161240b818460208701611fbf565b64173539b7b760d91b920191825250600501919050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008219821115612517576125176122ad565b500190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061254f90830184611feb565b9695505050505050565b60006020828403121561256b57600080fd5b8151611ee381611eb0565b600082821015612588576125886122ad565b500390565b634e487b7160e01b600052603160045260246000fdfea26469706673582212203fdfd6e4da1ca1c40d6a1949b6d42223b099ed3b47a6dc0bf196ae1e3a3ee21a64736f6c63430008090033";

type CicleoSubscriptionSecurityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CicleoSubscriptionSecurityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CicleoSubscriptionSecurity__factory extends ContractFactory {
  constructor(...args: CicleoSubscriptionSecurityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CicleoSubscriptionSecurity> {
    return super.deploy(overrides || {}) as Promise<CicleoSubscriptionSecurity>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CicleoSubscriptionSecurity {
    return super.attach(address) as CicleoSubscriptionSecurity;
  }
  override connect(signer: Signer): CicleoSubscriptionSecurity__factory {
    return super.connect(signer) as CicleoSubscriptionSecurity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CicleoSubscriptionSecurityInterface {
    return new utils.Interface(_abi) as CicleoSubscriptionSecurityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CicleoSubscriptionSecurity {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CicleoSubscriptionSecurity;
  }
}
