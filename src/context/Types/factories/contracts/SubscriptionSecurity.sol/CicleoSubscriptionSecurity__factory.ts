/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CicleoSubscriptionSecurity,
  CicleoSubscriptionSecurityInterface,
} from "../../../contracts/SubscriptionSecurity.sol/CicleoSubscriptionSecurity";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
    ],
    name: "MintOwnerPass",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deleteSubManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract CicleoSubscriptionFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_subManagerId",
        type: "uint256",
      },
    ],
    name: "getOwnersBySubmanagerId",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getSubManagerList",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subManagerId",
        type: "uint256",
      },
    ],
    name: "getSubManagerTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
    ],
    name: "mintNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownershipByNftId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownershipBySubscriptionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    name: "setFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_URI",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subManagerId",
        type: "uint256",
      },
    ],
    name: "verifyIfOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612457806100206000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636352211e1161010f578063a9b023d7116100a2578063cbf6947811610071578063cbf6947814610422578063d1194e2b14610442578063e985e9c514610455578063f2fde38b1461049157600080fd5b8063a9b023d7146103e0578063b88d4fde146103e8578063c45a0155146103fb578063c87b56dd1461040f57600080fd5b80638129fc1c116100de5780638129fc1c146103ac5780638da5cb5b146103b457806395d89b41146103c5578063a22cb465146103cd57600080fd5b80636352211e1461035d57806370a0823114610370578063715018a614610383578063810931f31461038b57600080fd5b806323b872dd116101875780634f6ccce7116101565780634f6ccce714610311578063588d2a47146103245780635b3d45b2146103375780635bb478081461034a57600080fd5b806323b872dd146102b8578063291077c4146102cb5780632f745c59146102eb57806342842e0e146102fe57600080fd5b8063081812fc116101c3578063081812fc1461025f578063095ea7b31461028a5780630e2b5e311461029d57806318160ddd146102b057600080fd5b806301790e01146101f557806301ffc9a71461021257806302fe53051461023557806306fdde031461024a575b600080fd5b6101ff61012e5481565b6040519081526020015b60405180910390f35b610225610220366004611d44565b6104a4565b6040519015158152602001610209565b610248610243366004611df4565b6104cf565b005b6102526104ef565b6040516102099190611e95565b61027261026d366004611ea8565b610581565b6040516001600160a01b039091168152602001610209565b610248610298366004611edd565b6105a8565b6102256102ab366004611edd565b6106c3565b6099546101ff565b6102486102c6366004611f07565b610722565b6102de6102d9366004611f43565b610753565b6040516102099190611f5e565b6101ff6102f9366004611edd565b61080b565b61024861030c366004611f07565b6108a1565b6101ff61031f366004611ea8565b6108bc565b6101ff610332366004611edd565b61094f565b6101ff610345366004611fa2565b6109ac565b610248610358366004611f43565b6109de565b61027261036b366004611ea8565b610a09565b6101ff61037e366004611f43565b610a69565b610248610aef565b6101ff610399366004611ea8565b6101306020526000908152604090205481565b610248610b03565b60c9546001600160a01b0316610272565b610252610c69565b6102486103db366004611fc4565b610c78565b610248610c83565b6102486103f6366004612000565b610db1565b61012f54610272906001600160a01b031681565b61025261041d366004611ea8565b610de9565b610435610430366004611ea8565b610e33565b604051610209919061207c565b610248610450366004611edd565b610f17565b6102256104633660046120bd565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b61024861049f366004611f43565b610f74565b60006001600160e01b0319821663780e9d6360e01b14806104c957506104c982610fea565b92915050565b6104d761103a565b80516104eb9061012d906020840190611c95565b5050565b6060606580546104fe906120f0565b80601f016020809104026020016040519081016040528092919081815260200182805461052a906120f0565b80156105775780601f1061054c57610100808354040283529160200191610577565b820191906000526020600020905b81548152906001019060200180831161055a57829003601f168201915b5050505050905090565b600061058c82611094565b506000908152606960205260409020546001600160a01b031690565b60006105b382610a09565b9050806001600160a01b0316836001600160a01b031614156106265760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061064257506106428133610463565b6106b45760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161061d565b6106be83836110f3565b505050565b6000805b6106d084610a69565b811015610718578261013060006106e7878561080b565b81526020019081526020016000205414156107065760019150506104c9565b8061071081612141565b9150506106c7565b5060009392505050565b61072c3382611161565b6107485760405162461bcd60e51b815260040161061d9061215c565b6106be8383836111e0565b6060600061076083610a69565b67ffffffffffffffff81111561077857610778611d68565b6040519080825280602002602001820160405280156107a1578160200160208202803683370190505b50905060005b6107b084610a69565b8110156108045761013060006107c6868461080b565b8152602001908152602001600020548282815181106107e7576107e76121a9565b6020908102919091010152806107fc81612141565b9150506107a7565b5092915050565b600061081683610a69565b82106108785760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161061d565b506001600160a01b03919091166000908152609760209081526040808320938352929052205490565b6106be83838360405180602001604052806000815250610db1565b60006108c760995490565b821061092a5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161061d565b6099828154811061093d5761093d6121a9565b90600052602060002001549050919050565b6000805b61095c84610a69565b81101561071857826101306000610973878561080b565b815260200190815260200160002054141561099a57610992848261080b565b9150506104c9565b806109a481612141565b915050610953565b61013160205281600052604060002081815481106109c957600080fd5b90600052602060002001600091509150505481565b6109e661103a565b61012f80546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152606760205260408120546001600160a01b0316806104c95760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161061d565b60006001600160a01b038216610ad35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161061d565b506001600160a01b031660009081526068602052604090205490565b610af761103a565b610b016000611351565b565b600054610100900460ff1615808015610b235750600054600160ff909116105b80610b3d5750303b158015610b3d575060005460ff166001145b610ba05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161061d565b6000805460ff191660011790558015610bc3576000805461ff0019166101001790555b610bcb6113a3565b610bd36113d2565b610c206040518060400160405280601081526020016f4369636c656f204f776e65725061737360801b815250604051806040016040528060038152602001620434f560ec1b815250611401565b8015610c66576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6060606680546104fe906120f0565b6104eb338383611432565b61012f5460405163de275a5360e01b81523360048201526000916001600160a01b03169063de275a539060240160206040518083038186803b158015610cc857600080fd5b505afa158015610cdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0091906121bf565b905080610d4f5760405162461bcd60e51b815260206004820152601860248201527f4f6e6c79207375624d616e616765722063616e206275726e0000000000000000604482015260640161061d565b60005b600082815261013160205260409020548110156104eb576000828152610131602052604090208054610d9f919083908110610d8f57610d8f6121a9565b9060005260206000200154611501565b80610da981612141565b915050610d52565b610dbb3383611161565b610dd75760405162461bcd60e51b815260040161061d9061215c565b610de3848484846115a4565b50505050565b606061012d82604051602001610e009291906121d8565b60408051601f1981840301815290829052610e1d91602001612277565b6040516020818303038152906040529050919050565b600081815261013160205260408120546060919067ffffffffffffffff811115610e5f57610e5f611d68565b604051908082528060200260200182016040528015610e88578160200160208202803683370190505b50905060005b60008481526101316020526040902054811015610804576000848152610131602052604090208054610edb919083908110610ecb57610ecb6121a9565b9060005260206000200154610a09565b828281518110610eed57610eed6121a9565b6001600160a01b039092166020928302919091019091015280610f0f81612141565b915050610e8e565b61012f546001600160a01b03163314610f6a5760405162461bcd60e51b815260206004820152601560248201527413db9b1e48199858dd1bdc9e4818d85b881b5a5b9d605a1b604482015260640161061d565b6104eb82826115d7565b610f7c61103a565b6001600160a01b038116610fe15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161061d565b610c6681611351565b60006001600160e01b031982166380ac58cd60e01b148061101b57506001600160e01b03198216635b5e139f60e01b145b806104c957506301ffc9a760e01b6001600160e01b03198316146104c9565b60c9546001600160a01b03163314610b015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161061d565b6000818152606760205260409020546001600160a01b0316610c665760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161061d565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061112882610a09565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061116d83610a09565b9050806001600160a01b0316846001600160a01b031614806111b457506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b806111d85750836001600160a01b03166111cd84610581565b6001600160a01b0316145b949350505050565b826001600160a01b03166111f382610a09565b6001600160a01b0316146112195760405162461bcd60e51b815260040161061d906122a0565b6001600160a01b03821661127b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161061d565b611288838383600161167f565b826001600160a01b031661129b82610a09565b6001600160a01b0316146112c15760405162461bcd60e51b815260040161061d906122a0565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60c980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166113ca5760405162461bcd60e51b815260040161061d906122e5565b610b016117b3565b600054610100900460ff166113f95760405162461bcd60e51b815260040161061d906122e5565b610b016117e3565b600054610100900460ff166114285760405162461bcd60e51b815260040161061d906122e5565b6104eb8282611811565b816001600160a01b0316836001600160a01b031614156114945760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161061d565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600061150c82610a09565b905061151c81600084600161167f565b61152582610a09565b600083815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526068845282852080546000190190558785526067909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6115af8484846111e0565b6115bb8484848461185f565b610de35760405162461bcd60e51b815260040161061d90612330565b600161012e60008282546115eb9190612382565b925050819055506115ff8261012e5461196c565b61012e8054600090815261013060209081526040808320859055848352610131825280832093548454600181018655948452928290209093019190915581516001600160a01b03851681529081018390527fc1d365af4c3297fbec0aed045dbdced226893bbf33491e1e1082b690e55c3c79910160405180910390a15050565b60018111156116ee5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b606482015260840161061d565b816001600160a01b03851661174a5761174581609980546000838152609a60205260408120829055600182018355919091527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000155565b61176d565b836001600160a01b0316856001600160a01b03161461176d5761176d8582611b05565b6001600160a01b0384166117895761178481611ba2565b6117ac565b846001600160a01b0316846001600160a01b0316146117ac576117ac8482611c51565b5050505050565b600054610100900460ff166117da5760405162461bcd60e51b815260040161061d906122e5565b610b0133611351565b600054610100900460ff1661180a5760405162461bcd60e51b815260040161061d906122e5565b600160fb55565b600054610100900460ff166118385760405162461bcd60e51b815260040161061d906122e5565b815161184b906065906020850190611c95565b5080516106be906066906020840190611c95565b60006001600160a01b0384163b1561196157604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906118a390339089908890889060040161239a565b602060405180830381600087803b1580156118bd57600080fd5b505af19250505080156118ed575060408051601f3d908101601f191682019092526118ea918101906123d7565b60015b611947573d80801561191b576040519150601f19603f3d011682016040523d82523d6000602084013e611920565b606091505b50805161193f5760405162461bcd60e51b815260040161061d90612330565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506111d8565b506001949350505050565b6001600160a01b0382166119c25760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161061d565b6000818152606760205260409020546001600160a01b031615611a275760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161061d565b611a3560008383600161167f565b6000818152606760205260409020546001600160a01b031615611a9a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161061d565b6001600160a01b038216600081815260686020908152604080832080546001019055848352606790915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001611b1284610a69565b611b1c91906123f4565b600083815260986020526040902054909150808214611b6f576001600160a01b03841660009081526097602090815260408083208584528252808320548484528184208190558352609890915290208190555b5060009182526098602090815260408084208490556001600160a01b039094168352609781528383209183525290812055565b609954600090611bb4906001906123f4565b6000838152609a602052604081205460998054939450909284908110611bdc57611bdc6121a9565b906000526020600020015490508060998381548110611bfd57611bfd6121a9565b6000918252602080832090910192909255828152609a90915260408082208490558582528120556099805480611c3557611c3561240b565b6001900381819060005260206000200160009055905550505050565b6000611c5c83610a69565b6001600160a01b039093166000908152609760209081526040808320868452825280832085905593825260989052919091209190915550565b828054611ca1906120f0565b90600052602060002090601f016020900481019282611cc35760008555611d09565b82601f10611cdc57805160ff1916838001178555611d09565b82800160010185558215611d09579182015b82811115611d09578251825591602001919060010190611cee565b50611d15929150611d19565b5090565b5b80821115611d155760008155600101611d1a565b6001600160e01b031981168114610c6657600080fd5b600060208284031215611d5657600080fd5b8135611d6181611d2e565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611d9957611d99611d68565b604051601f8501601f19908116603f01168101908282118183101715611dc157611dc1611d68565b81604052809350858152868686011115611dda57600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611e0657600080fd5b813567ffffffffffffffff811115611e1d57600080fd5b8201601f81018413611e2e57600080fd5b6111d884823560208401611d7e565b60005b83811015611e58578181015183820152602001611e40565b83811115610de35750506000910152565b60008151808452611e81816020860160208601611e3d565b601f01601f19169290920160200192915050565b602081526000611d616020830184611e69565b600060208284031215611eba57600080fd5b5035919050565b80356001600160a01b0381168114611ed857600080fd5b919050565b60008060408385031215611ef057600080fd5b611ef983611ec1565b946020939093013593505050565b600080600060608486031215611f1c57600080fd5b611f2584611ec1565b9250611f3360208501611ec1565b9150604084013590509250925092565b600060208284031215611f5557600080fd5b611d6182611ec1565b6020808252825182820181905260009190848201906040850190845b81811015611f9657835183529284019291840191600101611f7a565b50909695505050505050565b60008060408385031215611fb557600080fd5b50508035926020909101359150565b60008060408385031215611fd757600080fd5b611fe083611ec1565b915060208301358015158114611ff557600080fd5b809150509250929050565b6000806000806080858703121561201657600080fd5b61201f85611ec1565b935061202d60208601611ec1565b925060408501359150606085013567ffffffffffffffff81111561205057600080fd5b8501601f8101871361206157600080fd5b61207087823560208401611d7e565b91505092959194509250565b6020808252825182820181905260009190848201906040850190845b81811015611f965783516001600160a01b031683529284019291840191600101612098565b600080604083850312156120d057600080fd5b6120d983611ec1565b91506120e760208401611ec1565b90509250929050565b600181811c9082168061210457607f821691505b6020821081141561212557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156121555761215561212b565b5060010190565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156121d157600080fd5b5051919050565b600080845481600182811c9150808316806121f457607f831692505b602080841082141561221457634e487b7160e01b86526022600452602486fd5b818015612228576001811461223957612266565b60ff19861689528489019650612266565b60008b81526020902060005b8681101561225e5781548b820152908501908301612245565b505084890196505b509785525050509301949350505050565b60008251612289818460208701611e3d565b64173539b7b760d91b920191825250600501919050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600082198211156123955761239561212b565b500190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906123cd90830184611e69565b9695505050505050565b6000602082840312156123e957600080fd5b8151611d6181611d2e565b6000828210156124065761240661212b565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220ed31eccb5186154758ee3ee539f94bc7779e881bc6a2756727d31354ddcd30c864736f6c63430008090033";

type CicleoSubscriptionSecurityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CicleoSubscriptionSecurityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CicleoSubscriptionSecurity__factory extends ContractFactory {
  constructor(...args: CicleoSubscriptionSecurityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CicleoSubscriptionSecurity> {
    return super.deploy(overrides || {}) as Promise<CicleoSubscriptionSecurity>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CicleoSubscriptionSecurity {
    return super.attach(address) as CicleoSubscriptionSecurity;
  }
  override connect(signer: Signer): CicleoSubscriptionSecurity__factory {
    return super.connect(signer) as CicleoSubscriptionSecurity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CicleoSubscriptionSecurityInterface {
    return new utils.Interface(_abi) as CicleoSubscriptionSecurityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CicleoSubscriptionSecurity {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CicleoSubscriptionSecurity;
  }
}
