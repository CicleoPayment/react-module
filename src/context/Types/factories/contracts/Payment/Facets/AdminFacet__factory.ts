/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AdminFacet,
  AdminFacetInterface,
} from "../../../../contracts/Payment/Facets/AdminFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getPaymentManagersByUser",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "treasuryAccount",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
        ],
        internalType: "struct AdminFacet.PaymentManagerData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridgeExecutor",
        type: "address",
      },
    ],
    name: "setBridgeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_security",
        type: "address",
      },
    ],
    name: "setSecurity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_taxAccount",
        type: "address",
      },
    ],
    name: "setTaxAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_taxPercentage",
        type: "uint16",
      },
    ],
    name: "setTaxPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bc1806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063cba25e4b1161005b578063cba25e4b146100e0578063d0385b5e146100f3578063e2fbd74514610106578063f2fde38b1461011957600080fd5b80634cb51a211461008257806352228054146100ab5780638da5cb5b146100c0575b600080fd5b61009561009036600461080e565b61012c565b6040516100a2919061089a565b60405180910390f35b6100be6100b936600461080e565b610417565b005b6100c8610460565b6040516001600160a01b0390911681526020016100a2565b6100be6100ee36600461080e565b610498565b6100be61010136600461080e565b6104e1565b6100be610114366004610952565b61052a565b6100be61012736600461080e565b6105ce565b606060007fd8f6e013ff0cbc66ded25851d52c18673042e44ec585aeabfa2e9126bad1f74e600281015460405161c8c560ee1b81526001600160a01b0386811660048301529293506000929091169063323140009060240160006040518083038186803b15801561019c57600080fd5b505afa1580156101b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101d891908101906109bd565b90506000815167ffffffffffffffff8111156101f6576101f6610976565b60405190808252806020026020018201604052801561026e57816020015b61025b6040518060a0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016060815260200160608152602001600060ff1681525090565b8152602001906001900390816102145790505b50905060005b825181101561040e57600083828151811061029157610291610a63565b6020026020010151905060006102a6826105e2565b90506040518060a0016040528082600001516001600160a01b0316815260200182602001516001600160a01b031681526020018260400151815260200182602001516001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561032057600080fd5b505afa158015610334573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261035c9190810190610a79565b815260200182602001516001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561039e57600080fd5b505afa1580156103b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d69190610b04565b60ff168152508484815181106103ee576103ee610a63565b60200260200101819052505050808061040690610b27565b915050610274565b50949350505050565b61041f6106f0565b7fd8f6e013ff0cbc66ded25851d52c18673042e44ec585aeabfa2e9126bad1f75080546001600160a01b0319166001600160a01b0392909216919091179055565b60006104937fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b905090565b6104a06106f0565b7fd8f6e013ff0cbc66ded25851d52c18673042e44ec585aeabfa2e9126bad1f74f80546001600160a01b0319166001600160a01b0392909216919091179055565b6104e96106f0565b7fd8f6e013ff0cbc66ded25851d52c18673042e44ec585aeabfa2e9126bad1f74e80546001600160a01b0319166001600160a01b0392909216919091179055565b6103e88161ffff16106105845760405162461bcd60e51b815260206004820152601760248201527f5461782070657263656e7461676520746f6f206869676800000000000000000060448201526064015b60405180910390fd5b61058c6106f0565b7fd8f6e013ff0cbc66ded25851d52c18673042e44ec585aeabfa2e9126bad1f74f805461ffff92909216600160a01b0261ffff60a01b19909216919091179055565b6105d66106f0565b6105df81610779565b50565b6040805160608082018352600080835260208084018290528385018390528582527fd99b573b44155c1da097fb84c2f030c9f8daa830c708ef6625b3e30f7ba2234e808252918590208551938401865280546001600160a01b0390811685526001820154169184019190915260028101805494959294919284019161066690610b50565b80601f016020809104026020016040519081016040528092919081815260200182805461069290610b50565b80156106df5780601f106106b4576101008083540402835291602001916106df565b820191906000526020600020905b8154815290600101906020018083116106c257829003601f168201915b505050505081525050915050919050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146107775760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b606482015260840161057b565b565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b038481169182179093556040517fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60006020828403121561082057600080fd5b81356001600160a01b038116811461083757600080fd5b9392505050565b60005b83811015610859578181015183820152602001610841565b83811115610868576000848401525b50505050565b6000815180845261088681602086016020860161083e565b601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561094457888303603f19018552815180516001600160a01b0390811685528882015116888501528681015160a0888601819052906109058287018261086e565b9150506060808301518683038288015261091f838261086e565b60809485015160ff1697909401969096525050948701949250908601906001016108c1565b509098975050505050505050565b60006020828403121561096457600080fd5b813561ffff8116811461083757600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156109b5576109b5610976565b604052919050565b600060208083850312156109d057600080fd5b825167ffffffffffffffff808211156109e857600080fd5b818501915085601f8301126109fc57600080fd5b815181811115610a0e57610a0e610976565b8060051b9150610a1f84830161098c565b8181529183018401918481019088841115610a3957600080fd5b938501935b83851015610a5757845182529385019390850190610a3e565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610a8b57600080fd5b815167ffffffffffffffff80821115610aa357600080fd5b818401915084601f830112610ab757600080fd5b815181811115610ac957610ac9610976565b610adc601f8201601f191660200161098c565b9150808252856020828501011115610af357600080fd5b61040e81602084016020860161083e565b600060208284031215610b1657600080fd5b815160ff8116811461083757600080fd5b6000600019821415610b4957634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680610b6457607f821691505b60208210811415610b8557634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212201cc0c66a29b1c8f36eae7c80943bcc63c8a42a19dd8cff3d685e3d245f4f13a764736f6c63430008090033";

type AdminFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdminFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AdminFacet__factory extends ContractFactory {
  constructor(...args: AdminFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AdminFacet> {
    return super.deploy(overrides || {}) as Promise<AdminFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AdminFacet {
    return super.attach(address) as AdminFacet;
  }
  override connect(signer: Signer): AdminFacet__factory {
    return super.connect(signer) as AdminFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdminFacetInterface {
    return new utils.Interface(_abi) as AdminFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdminFacet {
    return new Contract(address, _abi, signerOrProvider) as AdminFacet;
  }
}
