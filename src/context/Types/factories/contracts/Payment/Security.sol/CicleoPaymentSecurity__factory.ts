/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CicleoPaymentSecurity,
  CicleoPaymentSecurityInterface,
} from "../../../../contracts/Payment/Security.sol/CicleoPaymentSecurity";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_diamond",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
    ],
    name: "MintOwnerPass",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
    ],
    name: "deletePaymentManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "diamond",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_subManagerId",
        type: "uint256",
      },
    ],
    name: "getOwnerByPaymentManagerId",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subManagerId",
        type: "uint256",
      },
    ],
    name: "getPaymentManagerTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getPaymentManagersList",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
    ],
    name: "mintNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownershipByNftId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownershipByPaymentManagerId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_diamond",
        type: "address",
      },
    ],
    name: "setDiamond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_URI",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subManagerId",
        type: "uint256",
      },
    ],
    name: "verifyIfOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200216a3803806200216a8339810160408190526200003491620001e9565b604080518082018252601881527f4369636c656f204f776e657250617373205061796d656e7400000000000000006020808301918252835180850190945260038452620434f560ec1b908401528151919291620000949160009162000143565b508051620000aa90600190602084019062000143565b505050620000c7620000c1620000ed60201b60201c565b620000f1565b600d80546001600160a01b0319166001600160a01b039290921691909117905562000258565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000151906200021b565b90600052602060002090601f016020900481019282620001755760008555620001c0565b82601f106200019057805160ff1916838001178555620001c0565b82800160010185558215620001c0579182015b82811115620001c0578251825591602001919060010190620001a3565b50620001ce929150620001d2565b5090565b5b80821115620001ce5760008155600101620001d3565b600060208284031215620001fc57600080fd5b81516001600160a01b03811681146200021457600080fd5b9392505050565b600181811c908216806200023057607f821691505b602082108114156200025257634e487b7160e01b600052602260045260246000fd5b50919050565b611f0280620002686000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806370a082311161010f578063b04634be116100a2578063e4481fc011610071578063e4481fc014610417578063e985e9c514610437578063f0b7db4e14610473578063f2fde38b1461048657600080fd5b8063b04634be146103cb578063b88d4fde146103de578063c87b56dd146103f1578063d1194e2b1461040457600080fd5b8063810931f3116100de578063810931f31461037f5780638da5cb5b1461039f57806395d89b41146103b0578063a22cb465146103b857600080fd5b806370a082311461033e578063715018a614610351578063754cadcb1461035957806376ed535a1461036c57600080fd5b806318160ddd1161018757806342842e0e1161015657806342842e0e146102f257806342e7ff8e146103055780634f6ccce7146103185780636352211e1461032b57600080fd5b806318160ddd146102a457806323b872dd146102ac5780632f745c59146102bf57806332314000146102d257600080fd5b806306fdde03116101c357806306fdde031461023e578063081812fc14610253578063095ea7b31461027e5780630e2b5e311461029157600080fd5b806301790e01146101ea57806301ffc9a71461020657806302fe530514610229575b600080fd5b6101f3600c5481565b6040519081526020015b60405180910390f35b6102196102143660046118b6565b610499565b60405190151581526020016101fd565b61023c610237366004611966565b6104c4565b005b6102466104e3565b6040516101fd9190611a07565b610266610261366004611a1a565b610575565b6040516001600160a01b0390911681526020016101fd565b61023c61028c366004611a4f565b61059c565b61021961029f366004611a4f565b6106b7565b6008546101f3565b61023c6102ba366004611a79565b610715565b6101f36102cd366004611a4f565b610746565b6102e56102e0366004611ab5565b6107dc565b6040516101fd9190611ad0565b61023c610300366004611a79565b610893565b61023c610313366004611a1a565b6108ae565b6101f3610326366004611a1a565b610915565b610266610339366004611a1a565b6109a8565b6101f361034c366004611ab5565b610a08565b61023c610a8e565b610266610367366004611a1a565b610aa2565b61023c61037a366004611ab5565b610aba565b6101f361038d366004611a1a565b600e6020526000908152604090205481565b600a546001600160a01b0316610266565b610246610ae4565b61023c6103c6366004611b14565b610af3565b6101f36103d9366004611a4f565b610afe565b61023c6103ec366004611b50565b610b5a565b6102466103ff366004611a1a565b610b92565b61023c610412366004611a4f565b610bdb565b6101f3610425366004611a1a565b600f6020526000908152604090205481565b610219610445366004611bcc565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600d54610266906001600160a01b031681565b61023c610494366004611ab5565b610c37565b60006001600160e01b0319821663780e9d6360e01b14806104be57506104be82610cad565b92915050565b6104cc610cfd565b80516104df90600b906020840190611807565b5050565b6060600080546104f290611bff565b80601f016020809104026020016040519081016040528092919081815260200182805461051e90611bff565b801561056b5780601f106105405761010080835404028352916020019161056b565b820191906000526020600020905b81548152906001019060200180831161054e57829003601f168201915b5050505050905090565b600061058082610d57565b506000908152600460205260409020546001600160a01b031690565b60006105a7826109a8565b9050806001600160a01b0316836001600160a01b0316141561061a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061063657506106368133610445565b6106a85760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610611565b6106b28383610db6565b505050565b6000805b6106c484610a08565b81101561070b5782600e60006106da8785610746565b81526020019081526020016000205414156106f95760019150506104be565b8061070381611c50565b9150506106bb565b5060009392505050565b61071f3382610e24565b61073b5760405162461bcd60e51b815260040161061190611c6b565b6106b2838383610ea3565b600061075183610a08565b82106107b35760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610611565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b606060006107e983610a08565b67ffffffffffffffff811115610801576108016118da565b60405190808252806020026020018201604052801561082a578160200160208202803683370190505b50905060005b61083984610a08565b81101561088c57600e600061084e8684610746565b81526020019081526020016000205482828151811061086f5761086f611cb8565b60209081029190910101528061088481611c50565b915050610830565b5092915050565b6106b283838360405180602001604052806000815250610b5a565b6108b833826106b7565b6108fa5760405162461bcd60e51b815260206004820152601360248201527227b7363c9037bbb732b91031b0b710313ab93760691b6044820152606401610611565b6000818152600f602052604090205461091290611014565b50565b600061092060085490565b82106109835760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610611565b6008828154811061099657610996611cb8565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806104be5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610611565b60006001600160a01b038216610a725760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610611565b506001600160a01b031660009081526003602052604090205490565b610a96610cfd565b610aa060006110b7565b565b6000818152600f60205260408120546104be906109a8565b610ac2610cfd565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600180546104f290611bff565b6104df338383611109565b6000805b610b0b84610a08565b81101561070b5782600e6000610b218785610746565b8152602001908152602001600020541415610b4857610b408482610746565b9150506104be565b80610b5281611c50565b915050610b02565b610b643383610e24565b610b805760405162461bcd60e51b815260040161061190611c6b565b610b8c848484846111d8565b50505050565b6060600b82604051602001610ba8929190611cce565b60408051601f1981840301815290829052610bc591602001611d6d565b6040516020818303038152906040529050919050565b600d546001600160a01b03163314610c2d5760405162461bcd60e51b815260206004820152601560248201527413db9b1e48199858dd1bdc9e4818d85b881b5a5b9d605a1b6044820152606401610611565b6104df828261120b565b610c3f610cfd565b6001600160a01b038116610ca45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610611565b610912816110b7565b60006001600160e01b031982166380ac58cd60e01b1480610cde57506001600160e01b03198216635b5e139f60e01b145b806104be57506301ffc9a760e01b6001600160e01b03198316146104be565b600a546001600160a01b03163314610aa05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610611565b6000818152600260205260409020546001600160a01b03166109125760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610611565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610deb826109a8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610e30836109a8565b9050806001600160a01b0316846001600160a01b03161480610e7757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610e9b5750836001600160a01b0316610e9084610575565b6001600160a01b0316145b949350505050565b826001600160a01b0316610eb6826109a8565b6001600160a01b031614610edc5760405162461bcd60e51b815260040161061190611d96565b6001600160a01b038216610f3e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610611565b610f4b838383600161129d565b826001600160a01b0316610f5e826109a8565b6001600160a01b031614610f845760405162461bcd60e51b815260040161061190611d96565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061101f826109a8565b905061102f81600084600161129d565b611038826109a8565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316141561116b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610611565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6111e3848484610ea3565b6111ef848484846113d1565b610b8c5760405162461bcd60e51b815260040161061190611ddb565b6001600c600082825461121e9190611e2d565b9250508190555061123182600c546114de565b600c80546000908152600e602090815260408083208590559254848352600f8252918390209190915581516001600160a01b03851681529081018390527fc1d365af4c3297fbec0aed045dbdced226893bbf33491e1e1082b690e55c3c79910160405180910390a15050565b600181111561130c5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b6064820152608401610611565b816001600160a01b0385166113685761136381600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61138b565b836001600160a01b0316856001600160a01b03161461138b5761138b8582611677565b6001600160a01b0384166113a7576113a281611714565b6113ca565b846001600160a01b0316846001600160a01b0316146113ca576113ca84826117c3565b5050505050565b60006001600160a01b0384163b156114d357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611415903390899088908890600401611e45565b602060405180830381600087803b15801561142f57600080fd5b505af192505050801561145f575060408051601f3d908101601f1916820190925261145c91810190611e82565b60015b6114b9573d80801561148d576040519150601f19603f3d011682016040523d82523d6000602084013e611492565b606091505b5080516114b15760405162461bcd60e51b815260040161061190611ddb565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e9b565b506001949350505050565b6001600160a01b0382166115345760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610611565b6000818152600260205260409020546001600160a01b0316156115995760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610611565b6115a760008383600161129d565b6000818152600260205260409020546001600160a01b03161561160c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610611565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000600161168484610a08565b61168e9190611e9f565b6000838152600760205260409020549091508082146116e1576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061172690600190611e9f565b6000838152600960205260408120546008805493945090928490811061174e5761174e611cb8565b90600052602060002001549050806008838154811061176f5761176f611cb8565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806117a7576117a7611eb6565b6001900381819060005260206000200160009055905550505050565b60006117ce83610a08565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b82805461181390611bff565b90600052602060002090601f016020900481019282611835576000855561187b565b82601f1061184e57805160ff191683800117855561187b565b8280016001018555821561187b579182015b8281111561187b578251825591602001919060010190611860565b5061188792915061188b565b5090565b5b80821115611887576000815560010161188c565b6001600160e01b03198116811461091257600080fd5b6000602082840312156118c857600080fd5b81356118d3816118a0565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561190b5761190b6118da565b604051601f8501601f19908116603f01168101908282118183101715611933576119336118da565b8160405280935085815286868601111561194c57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561197857600080fd5b813567ffffffffffffffff81111561198f57600080fd5b8201601f810184136119a057600080fd5b610e9b848235602084016118f0565b60005b838110156119ca5781810151838201526020016119b2565b83811115610b8c5750506000910152565b600081518084526119f38160208601602086016119af565b601f01601f19169290920160200192915050565b6020815260006118d360208301846119db565b600060208284031215611a2c57600080fd5b5035919050565b80356001600160a01b0381168114611a4a57600080fd5b919050565b60008060408385031215611a6257600080fd5b611a6b83611a33565b946020939093013593505050565b600080600060608486031215611a8e57600080fd5b611a9784611a33565b9250611aa560208501611a33565b9150604084013590509250925092565b600060208284031215611ac757600080fd5b6118d382611a33565b6020808252825182820181905260009190848201906040850190845b81811015611b0857835183529284019291840191600101611aec565b50909695505050505050565b60008060408385031215611b2757600080fd5b611b3083611a33565b915060208301358015158114611b4557600080fd5b809150509250929050565b60008060008060808587031215611b6657600080fd5b611b6f85611a33565b9350611b7d60208601611a33565b925060408501359150606085013567ffffffffffffffff811115611ba057600080fd5b8501601f81018713611bb157600080fd5b611bc0878235602084016118f0565b91505092959194509250565b60008060408385031215611bdf57600080fd5b611be883611a33565b9150611bf660208401611a33565b90509250929050565b600181811c90821680611c1357607f821691505b60208210811415611c3457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611c6457611c64611c3a565b5060010190565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600080845481600182811c915080831680611cea57607f831692505b6020808410821415611d0a57634e487b7160e01b86526022600452602486fd5b818015611d1e5760018114611d2f57611d5c565b60ff19861689528489019650611d5c565b60008b81526020902060005b86811015611d545781548b820152908501908301611d3b565b505084890196505b509785525050509301949350505050565b60008251611d7f8184602087016119af565b64173539b7b760d91b920191825250600501919050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008219821115611e4057611e40611c3a565b500190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e78908301846119db565b9695505050505050565b600060208284031215611e9457600080fd5b81516118d3816118a0565b600082821015611eb157611eb1611c3a565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220111259de275f1e6f97854426d4165e7d7e7b237ea04bd5fb1cdb29d150c1782264736f6c63430008090033";

type CicleoPaymentSecurityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CicleoPaymentSecurityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CicleoPaymentSecurity__factory extends ContractFactory {
  constructor(...args: CicleoPaymentSecurityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _diamond: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CicleoPaymentSecurity> {
    return super.deploy(
      _diamond,
      overrides || {}
    ) as Promise<CicleoPaymentSecurity>;
  }
  override getDeployTransaction(
    _diamond: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_diamond, overrides || {});
  }
  override attach(address: string): CicleoPaymentSecurity {
    return super.attach(address) as CicleoPaymentSecurity;
  }
  override connect(signer: Signer): CicleoPaymentSecurity__factory {
    return super.connect(signer) as CicleoPaymentSecurity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CicleoPaymentSecurityInterface {
    return new utils.Interface(_abi) as CicleoPaymentSecurityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CicleoPaymentSecurity {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CicleoPaymentSecurity;
  }
}
