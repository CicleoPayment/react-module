/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  StargateFacet,
  StargateFacetInterface,
} from "../../../../../contracts/Subscription/Bridge/Facets/StargateFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "destChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "subscriptionManagerId",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "subscriptionId",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct StargateFacet.BridgePaymentSpec",
        name: "info",
        type: "tuple",
      },
    ],
    name: "PaymentBridgeSubscription",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "subscriptionManagerId",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "subscriptionId",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "priceInSubToken",
            type: "uint256",
          },
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct PaymentParameters",
        name: "paymentParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "dstPoolId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dstGasForCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lzFee",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "refundAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callTo",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct StargateData",
        name: "_stargateData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "referral",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "payFunctionWithBridgeWithStargate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "subscriptionManagerId",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "subscriptionId",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "priceInSubToken",
            type: "uint256",
          },
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct PaymentParameters",
        name: "paymentParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "dstPoolId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dstGasForCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lzFee",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "refundAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callTo",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct StargateData",
        name: "_stargateData",
        type: "tuple",
      },
    ],
    name: "renewSubscriptionByBridgeWithStargate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506115a2806100206000396000f3fe6080604052600436106100295760003560e01c8063613cc7d41461002e578063e8a5db2c14610043575b600080fd5b61004161003c366004610c83565b610056565b005b610041610051366004610d6d565b6100f8565b468952604080516020601f84018190048102820181019092528281526100a1918b913391889190879087908190840183828082843760009201919091525050505060c08a015161012c565b60c08601528851600090815260008051602061154d83398151915260209081526040808320828d01518452825280832033845290915290206001018390556100ed89338a8a8a8a61014f565b505050505050505050565b6101028686610333565b61011186868360c001516103c1565b60c082015261012486868686868661014f565b505050505050565b60606101438261013e88888888610428565b61048a565b90505b95945050505050565b61015a86868661050f565b806060015134146101a45760405162461bcd60e51b815260206004820152600f60248201526e4572726f72206d73672e76616c756560881b60448201526064015b60405180910390fd5b811561022057604051636baab60f60e11b8152731231deb6f5749ef6ce6943a275a1d3e7486f4eae9063d7556c1e9034906101e990889088908890889060040161101f565b6000604051808303818588803b15801561020257600080fd5b505af1158015610216573d6000803e3d6000fd5b505050505061028e565b604051633b00e80760e01b8152731231deb6f5749ef6ce6943a275a1d3e7486f4eae90633b00e80790349061025b9088908690600401611150565b6000604051808303818588803b15801561027457600080fd5b505af1158015610288573d6000803e3d6000fd5b50505050505b6040805160808101825287518152602080890151908201528782015160ff16818301526060808901519082015290516102f09190815181526020808301519082015260408083015160ff16908201526060918201519181019190915260800190565b604051908190038120906001600160a01b038716907f74665889c58d4a06a4a4a8e0bb02761d35a66416e20acbd510a34b1cf52e53aa90600090a3505050505050565b4260008051602061154d833981519152835160009081526020918252604080822083870151835283528082206001600160a01b03861683529092522054106103bd5760405162461bcd60e51b815260206004820152601b60248201527f537562736372697074696f6e206973206e6f7420657870697265640000000000604482015260640161019b565b5050565b60606104208261013e8587602001516040805160248101929092526001600160a01b03929092166044808301919091528251808303909101815260649091019091526020810180516001600160e01b031663bc0dee8360e01b17905290565b949350505050565b6040516060906309253c4960e31b90819061044d908890889088908890602401611175565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152915050949350505050565b6060600080600080868060200190518101906104a6919061123d565b93509350935093508583600185516104be91906113d8565b815181106104ce576104ce6113ef565b602002602001015160a00181905250838383836040516020016104f49493929190611405565b60405160208183030381529060405294505050505092915050565b606083015160008051602061154d833981519152845160009081526020918252604080822083880151835283528082203383529092522060020154101561058a5760405162461bcd60e51b815260206004820152600f60248201526e082dadeeadce840e8dede40d0d2ced608b1b604482015260640161019b565b60808301516040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156105d057600080fd5b505afa1580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060891906114f7565b608085015160c08401516040516323b872dd60e01b81526001600160a01b038781166004830152306024830152604482019290925292935016906323b872dd90606401602060405180830381600087803b15801561066557600080fd5b505af1158015610679573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069d9190611510565b5060008051602061154d833981519152845160009081526020918252604080822083880151835283528082206001600160a01b038716835290925220600101546106e79042611534565b60008051602061154d833981519152855160009081526020918252604080822083890151835283528082206001600160a01b0388811684529352908190209290925560c0840151608087015192516370a0823160e01b81523060048201529092849216906370a082319060240160206040518083038186803b15801561076c57600080fd5b505afa158015610780573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a491906114f7565b6107ae91906113d8565b10156107ee5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161019b565b608084015160c083015160405163095ea7b360e01b8152731231deb6f5749ef6ce6943a275a1d3e7486f4eae600482015260248101919091526001600160a01b039091169063095ea7b390604401602060405180830381600087803b15801561085657600080fd5b505af115801561086a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088e9190611510565b5050505050565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b03811182821017156108ce576108ce610895565b60405290565b60405160e081016001600160401b03811182821017156108ce576108ce610895565b604051601f8201601f191681016001600160401b038111828210171561091e5761091e610895565b604052919050565b6001600160a01b038116811461093b57600080fd5b50565b600060a0828403121561095057600080fd5b60405160a081018181106001600160401b038211171561097257610972610895565b80604052508091508235815260208301356020820152604083013560ff8116811461099c57600080fd5b60408201526060838101359082015260808301356109b981610926565b6080919091015292915050565b60006001600160401b038211156109df576109df610895565b50601f01601f191660200190565b600082601f8301126109fe57600080fd5b8135610a11610a0c826109c6565b6108f6565b818152846020838601011115610a2657600080fd5b816020850160208301376000918101602001919091529392505050565b8035610a4e81610926565b919050565b801515811461093b57600080fd5b8035610a4e81610a53565b60006101408284031215610a7f57600080fd5b610a876108ab565b90508135815260208201356001600160401b0380821115610aa757600080fd5b610ab3858386016109ed565b60208401526040840135915080821115610acc57600080fd5b50610ad9848285016109ed565b604083015250610aeb60608301610a43565b6060820152610afc60808301610a43565b6080820152610b0d60a08301610a43565b60a082015260c082013560c082015260e082013560e0820152610100610b34818401610a61565b90820152610120610b46838201610a61565b9082015292915050565b60008083601f840112610b6257600080fd5b5081356001600160401b03811115610b7957600080fd5b6020830191508360208260051b8501011115610b9457600080fd5b9250929050565b600060e08284031215610bad57600080fd5b610bb56108d4565b905081358152602082013560208201526040820135604082015260608201356060820152610be560808301610a43565b608082015260a08201356001600160401b0380821115610c0457600080fd5b610c10858386016109ed565b60a084015260c0840135915080821115610c2957600080fd5b50610c36848285016109ed565b60c08301525092915050565b60008083601f840112610c5457600080fd5b5081356001600160401b03811115610c6b57600080fd5b602083019150836020828501011115610b9457600080fd5b60008060008060008060008060006101608a8c031215610ca257600080fd5b610cac8b8b61093e565b985060a08a01356001600160401b0380821115610cc857600080fd5b610cd48d838e01610a6c565b995060c08c0135915080821115610cea57600080fd5b610cf68d838e01610b50565b909950975060e08c0135915080821115610d0f57600080fd5b610d1b8d838e01610b9b565b9650610d2a6101008d01610a43565b95506101208c013594506101408c0135915080821115610d4957600080fd5b50610d568c828d01610c42565b915080935050809150509295985092959850929598565b6000806000806000806101208789031215610d8757600080fd5b610d91888861093e565b955060a0870135610da181610926565b945060c08701356001600160401b0380821115610dbd57600080fd5b610dc98a838b01610a6c565b955060e0890135915080821115610ddf57600080fd5b610deb8a838b01610b50565b9095509350610100890135915080821115610e0557600080fd5b50610e1289828a01610b9b565b9150509295509295509295565b60005b83811015610e3a578181015183820152602001610e22565b83811115610e49576000848401525b50505050565b60008151808452610e67816020860160208601610e1f565b601f01601f19169290920160200192915050565b6000610140825184526020830151816020860152610e9b82860182610e4f565b91505060408301518482036040860152610eb58282610e4f565b9150506060830151610ed260608601826001600160a01b03169052565b506080830151610eed60808601826001600160a01b03169052565b5060a0830151610f0860a08601826001600160a01b03169052565b5060c083015160c085015260e083015160e085015261010080840151610f318287018215159052565b50506101209283015115159390920192909252919050565b6000808335601e19843603018112610f6057600080fd5b83016020810192503590506001600160401b03811115610f7f57600080fd5b803603831315610b9457600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8051825260208101516020830152604081015160408301526060810151606083015260018060a01b036080820151166080830152600060a082015160e060a085015261100660e0850182610e4f565b905060c083015184820360c08601526101468282610e4f565b6000606080835261103281840188610e7b565b602084820381860152818783528183019050818860051b840101896000805b8b81101561112c57868403601f190185528235368e900360de19018112611076578283fd5b8d0160e0813561108581610926565b6001600160a01b03908116875282890135906110a082610926565b168689015260406110b2838201610a43565b6001600160a01b0316908701526110ca828b01610a43565b6001600160a01b03168a8701526080828101359087015260a06110ef81840184610f49565b83838a0152611101848a018284610f8e565b935050505060c0611113818401610a61565b1515960195909552509385019391850191600101611051565b50505086810360408801526111418189610fb7565b9b9a5050505050505050505050565b6040815260006111636040830185610e7b565b82810360208401526101468185610fb7565b6000610100865183526020870151602084015260ff604088015116604084015260608701516060840152608087015160018060a01b03808216608086015280881660a086015280871660c086015250508060e08401526111d781840185610e4f565b979650505050505050565b8051610a4e81610926565b600082601f8301126111fe57600080fd5b815161120c610a0c826109c6565b81815284602083860101111561122157600080fd5b610420826020830160208701610e1f565b8051610a4e81610a53565b6000806000806080858703121561125357600080fd5b8451935060208501516001600160401b038082111561127157600080fd5b818701915087601f83011261128557600080fd5b81518181111561129757611297610895565b6112a660208260051b016108f6565b8082825260208201915060208360051b86010192508a8311156112c857600080fd5b602085015b83811015611394578051858111156112e457600080fd5b860160e0818e03601f190112156112fa57600080fd5b6113026108d4565b61130e602083016111e2565b815261131c604083016111e2565b602082015261132d606083016111e2565b604082015261133e608083016111e2565b606082015260a0820151608082015260c08201518781111561135f57600080fd5b61136e8f6020838601016111ed565b60a08301525061138060e08301611232565b60c0820152845250602092830192016112cd565b5080975050505050506113a9604086016111e2565b91506113b7606086016111e2565b905092959194509250565b634e487b7160e01b600052601160045260246000fd5b6000828210156113ea576113ea6113c2565b500390565b634e487b7160e01b600052603260045260246000fd5b600060808083018784526020828186015281885180845260a093508387019150838160051b880101838b0160005b838110156114c557898303609f19018552815180516001600160a01b039081168552878201518116888601526040808301518216908601526060808301519091169085015288810151898501528781015160e08986018190529061149982870182610e4f565b91505060c08083015192506114b18187018415159052565b509587019593505090850190600101611433565b50506001600160a01b038a16604089015295506114e3945050505050565b6001600160a01b0383166060830152610146565b60006020828403121561150957600080fd5b5051919050565b60006020828403121561152257600080fd5b815161152d81610a53565b9392505050565b60008219821115611547576115476113c2565b50019056feaac8aff6168086bf0ebba85245f7ec7b3821eb78fcc9bef2b675e60b9384ed29a2646970667358221220817fe3755926b9f03418d2a38db9f23549c523713cb64d283e3a9b30fa5e8f5264736f6c63430008090033";

type StargateFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StargateFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StargateFacet__factory extends ContractFactory {
  constructor(...args: StargateFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StargateFacet> {
    return super.deploy(overrides || {}) as Promise<StargateFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StargateFacet {
    return super.attach(address) as StargateFacet;
  }
  override connect(signer: Signer): StargateFacet__factory {
    return super.connect(signer) as StargateFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StargateFacetInterface {
    return new utils.Interface(_abi) as StargateFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StargateFacet {
    return new Contract(address, _abi, signerOrProvider) as StargateFacet;
  }
}
